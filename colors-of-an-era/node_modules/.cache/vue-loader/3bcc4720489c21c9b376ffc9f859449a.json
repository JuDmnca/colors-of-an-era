{"remainingRequest":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/src/components/Scene.vue?vue&type=style&index=0&lang=sass&","dependencies":[{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/src/components/Scene.vue","mtime":1603437393260},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/css-loader/dist/cjs.js","mtime":1603113175720},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1603113182020},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/postcss-loader/src/index.js","mtime":1603113178916},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/sass-loader/dist/cjs.js","mtime":1603113180663},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/cache-loader/dist/cjs.js","mtime":1603113174759},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/vue-loader/lib/index.js","mtime":1603113182020}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCmJvZHkKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI2LDI2LDI2LDEpCiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIvdGV4dHVyZXMvYmcucG5nIikKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIKICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyCiAgYmFja2dyb3VuZC1ibGVuZC1tb2RlOiBzb2Z0LWxpZ2h0CiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAxcyBlYXNlCi5ob21lCiAgJl9fY3RhCiAgICAmLWhvdCwgJi1jb2xkCiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZQogICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmUKICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZQogICAgICBmb250LWZhbWlseTogJ09wZW4gU2FucycKICAgICAgZm9udC1zaXplOiAxMnB4CiAgICAgIGRpc3BsYXk6IGZsZXgKICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcgogICAgICBvcGFjaXR5OiAwCiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgM3MgZWFzZQogICAgICAubGluZQogICAgICAgIHdpZHRoOiAxMDVweAogICAgICAgIGhlaWdodDogMXB4CiAgICAgICAgbWFyZ2luLWxlZnQ6IDVweAogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNERDM0MDAKICAgICAgLmNpcmNsZQogICAgICAgIGhlaWdodDogMzBweAogICAgICAgIHdpZHRoOiAzMHB4CiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlCiAgICAgICAgY29sb3I6IHRyYW5zcGFyZW50CiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI0REMzQwMAogICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jawogICAgJi1ob3QKICAgICAgY29sb3I6ICNERDM0MDAKICAgICAgdG9wOiA0MCUKICAgICAgbGVmdDogNSUKICAgICAgLmxpbmUKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjREQzNDAwCiAgICAgIC5jaXJjbGUKICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjREQzNDAwCiAgICAmLWNvbGQKICAgICAgY29sb3I6ICMyNzZERkYKICAgICAgdG9wOiA2MCUKICAgICAgbGVmdDogNSUKICAgICAgLmxpbmUKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjc2REZGCiAgICAgIC5jaXJjbGUKICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMjc2REZGCiAgJl9fY29udGFpbmVyCiAgICBwb3NpdGlvbjogYWJzb2x1dGUKICAgIGxlZnQ6IDQ1JQogICAgdG9wOiAzNSUKICAgIGgyCiAgICAgIGNvbG9yOiAjODg4ODg4CiAgICAgIGZvbnQtc2l6ZTogNDBweAogICAgICBmb250LWZhbWlseTogJ01heml1cycKICAgICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXIKICAgICAgdHJhbnNpdGlvbjogY29sb3IgMXMgZWFzZQogICAgICBtYXJnaW46IDEwcHgKICAgICAgJjpsYXN0LWNoaWxkCiAgICAgICAgZm9udC1zaXplOiA1NXB4CiAgICAgICAgZm9udC1mYW1pbHk6ICdNYXppdXMgSScKICAgICAgICBjb2xvcjogd2hpdGUK"},{"version":3,"sources":["Scene.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Scene.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class='container'>\n        <canvas class=\"main-canvas\"></canvas>\n        <div class=\"home__cta\">\n            <router-link class=\"home__cta-hot\" to=\"/hot\">See the movies\n              <span class=\"line\"></span>\n              <span class=\"circle\"></span>\n            </router-link>\n            <router-link class=\"home__cta-cold\" to=\"/cold\">See the movies\n              <span class=\"line\"></span>\n              <span class=\"circle\"></span>\n            </router-link>\n        </div>\n        <div class=\"home__container\">\n          <h2 class=\"home__text\">{{ text_first }}{{ text_last }}</h2>\n          <h2 class=\"home__temperature\">{{ temperature }}</h2>\n          <ul id=\"list\"></ul>\n        </div>\n    </div>\n</template>\n\n<style lang=\"sass\">\n  body\n    background-color: rgba(26,26,26,1)\n    background-image: url(\"/textures/bg.png\")\n    background-position: center\n    background-size: cover\n    background-blend-mode: soft-light\n    transition: background 1s ease\n  .home\n    &__cta\n      &-hot, &-cold\n        position: absolute\n        text-decoration: none\n        text-transform: uppercase\n        font-family: 'Open Sans'\n        font-size: 12px\n        display: flex\n        align-items: center\n        opacity: 0\n        transition: opacity 3s ease\n        .line\n          width: 105px\n          height: 1px\n          margin-left: 5px\n          background-color: #DD3400\n        .circle\n          height: 30px\n          width: 30px\n          border-radius: 50%\n          color: transparent\n          border: 1px solid #DD3400\n          display: inline-block\n      &-hot\n        color: #DD3400\n        top: 40%\n        left: 5%\n        .line\n          background-color: #DD3400\n        .circle\n          border: 1px solid #DD3400\n      &-cold\n        color: #276DFF\n        top: 60%\n        left: 5%\n        .line\n          background-color: #276DFF\n        .circle\n          border: 1px solid #276DFF\n    &__container\n      position: absolute\n      left: 45%\n      top: 35%\n      h2\n        color: #888888\n        font-size: 40px\n        font-family: 'Mazius'\n        font-weight: lighter\n        transition: color 1s ease\n        margin: 10px\n        &:last-child\n          font-size: 55px\n          font-family: 'Mazius I'\n          color: white\n</style>\n\n<script>\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three';\nimport Easing from \"../assets/js/easing.js\"\nimport Mouse from '../assets/js/mouse.js'\n\nexport default {\n  name: 'Scene',\n  data() {\n    return {\n      camera: null,\n      scene: null,\n      renderer: null,\n      mesh: null,\n      cold_nbr: 0,\n      text_first: 'Global temperature of a ',\n      text_last: 'movie : ',\n      temperature: 'calculating...',\n      time: 0,\n      films: null,\n      cold_films: [],\n      hot_films: [],\n      total_films: [],\n      filtered_films: [],\n      genres: []\n    }\n  },\n  methods: {\n    init: function(callback) {\n      var requestURL = '/movies.json';\n      var request = new XMLHttpRequest();\n      request.open('GET', requestURL);\n\n      request.responseType = 'json';\n      request.send();\n\n      let that = this\n\n      request.onload = function() {\n        this.films = request.response;\n\n        this.films[0].forEach(film => {\n          if (!(that.genres.includes(film['genre']))) {\n            that.genres.push(film['genre'])\n          }\n        })\n\n        that.genres.forEach(genre => {\n          let li = document.createElement(\"LI\")\n          let t = document.createTextNode(genre)\n          li.appendChild(t)\n          li.addEventListener(\"click\", that.update)\n          document.getElementById(\"list\").appendChild(li)\n        })\n\n        this.films[0].forEach(film => {\n          if (film['colors'] === 'cold') {\n            that.cold_films.push(film)\n          } else {\n            that.hot_films.push(film)\n          }\n            that.total_films.push(film)\n          })\n\n        that.cold_nbr = (that.cold_films.length/that.total_films.length) * 4\n\n        callback()\n        setTimeout(() => {\n        let home__ctacold = document.querySelector('.home__cta-cold')\n        let home__ctahot = document.querySelector('.home__cta-hot')\n        let home__text = document.querySelector('.home__text')\n        let home__temp = document.querySelector('.home__temperature')\n\n        if (that.cold_films.length > that.total_films.length - that.cold_films.length) {\n          that.temperature = 'very cold'\n          document.body.style.backgroundColor = 'rgba(19,19,71,1)'\n          home__text.style.color = '#276DFF'\n          home__ctacold.style.opacity = '100'\n          home__ctahot.style.display = 'none'\n        } else if (that.cold_films.length < that.total_films.length - that.cold_films.length){\n          that.temperature = 'very hot'\n          document.body.style.backgroundColor = 'rgba(47,0,0,1)'\n          home__text.style.color = '#DD3400'\n          home__ctahot.style.opacity = '100'\n          home__ctacold.style.display = 'none'\n        } else {\n          that.temperature = 'temperate'\n        }\n\n        home__temp.style.fontFamily = \"'Mazius'\"\n        }, 2000);\n      }\n    },\n    animate: function() {\n        requestAnimationFrame(this.animate);\n        this.time += 0.01\n\n        if (this.time < 2) {\n          if (this.temperature === 'very cold') {\n            this.pivot.rotation.x -= 0.002 * Easing.easeInOutCubic(this.time % 1)\n            this.pivot.rotation.y -= 0.13 * Easing.easeInOutCubic(this.time % 1)\n            this.pivot.rotation.z -= 0.002 * Easing.easeInOutCubic(this.time % 1)\n          } else if (this.temperature === 'very hot') {\n            this.pivot.rotation.x += 0.003 * Easing.easeInOutCubic(this.time % 1)\n            this.pivot.rotation.y += 0.125 * Easing.easeInOutCubic(this.time % 1)\n            this.pivot.rotation.z += 0.002 * Easing.easeInOutCubic(this.time % 1)\n          }\n        }\n        this.renderer.render(this.scene, this.camera);\n    },\n    create3d: function() {\n        const container = document.querySelector('.container')\n        const canvas = document.querySelector('.main-canvas')\n\n        canvas.width = window.innerWidth * window.devicePixelRatio\n        canvas.height = window.innerHeight * window.devicePixelRatio\n        canvas.style.maxWidth = window.innerWidth\n        canvas.style.maxHeight = window.innerHeight\n        this.canvas_width = canvas.width\n        this.canvas_height = canvas.height\n\n        // Setup Scene\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 20000);\n        this.renderer = new THREE.WebGLRenderer({\n            canvas: canvas,\n            alpha: true\n        });\n\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\n        this.renderer.setPixelRatio(window.devicePixelRatio)\n\n        window.addEventListener(\"resize\", () => {\n            this.renderer.setSize(window.innerWidth, window.innerHeight)\n            this.renderer.setPixelRatio(window.devicePixelRatio)\n        })\n\n        let manager = new THREE.LoadingManager();\n        let textureLoader = new THREE.TextureLoader(manager)\n\n        let texture_silver = textureLoader.load('/textures/silver.jpg')\n        let material_silver = new THREE.MeshMatcapMaterial({\n            matcap: texture_silver,\n        })\n        let texture_thermo = textureLoader.load('/textures/white.jpg')\n        let material_thermo = new THREE.MeshMatcapMaterial({\n            matcap: texture_thermo,\n        })\n        let texture_grad = textureLoader.load('/textures/grad.jpg')\n        let material_grad = new THREE.MeshMatcapMaterial({\n            matcap: texture_grad,\n        })\n\n        let t_hot = textureLoader.load('/textures/hot.jpg')\n        let m_hot = new THREE.MeshMatcapMaterial({\n            matcap: t_hot,\n        })\n        let t_cold = textureLoader.load('/textures/cold.jpg')\n        let m_cold = new THREE.MeshMatcapMaterial({\n            matcap: t_cold,\n        })\n\n        let g_hot = new THREE.CylinderBufferGeometry(0.1, 0.1, (4 - this.cold_nbr), 100);\n        let g_cold = new THREE.CylinderBufferGeometry(0.1, 0.1, this.cold_nbr, 100);\n\n        let g_py = (g_cold.parameters.height/2)\n        let level = 2.2\n\n        this.cold = new THREE.Mesh(g_cold, m_cold)\n        this.cold.position.set(-0.3, g_py - level, 0.1)\n        this.hot = new THREE.Mesh(g_hot, m_hot)\n        this.hot.position.set(-0.3, 2 * g_py + g_hot.parameters.height/2 - level, 0.1)\n\n        const loader = new GLTFLoader();\n        loader.load(\n            '/thermo_sanstxt.glb',\n            (gltf) => {\n                // called when the resource is loaded\n                console.log(gltf);\n\n                // pointing Mesh\n                gltf.scene.children[0].children[1].geometry.center()\n                gltf.scene.children[0].children[2].geometry.center()\n                gltf.scene.children[0].children[3].geometry.center()\n\n                this.anneau = gltf.scene.children[0].children[1]\n                this.thermo = gltf.scene.children[0].children[2]\n                this.text = gltf.scene.children[0].children[3]\n                // Overiding Material\n                this.anneau.material = material_silver\n                this.thermo.material = material_thermo\n                this.text.material = material_grad\n                this.text.material.side = THREE.DoubleSide\n\n                this.anneau.scale.set(0.013,0.013,0.013)\n                this.anneau.position.set(0.1, 2.8, 0)\n\n                this.thermo.scale.set(0.013,0.013,0.013)\n                this.thermo.position.set(0, 0, 0)\n\n                this.text.scale.set(0.012,0.012,0.012)\n                this.text.position.set(0.25, -0.2, 0.15)\n\n                // Add to scene\n                this.group = new THREE.Group();\n                this.group.add( this.anneau );\n                this.group.add( this.thermo );\n                this.group.add( this.text );\n                this.group.add( this.cold )\n                this.group.add( this.hot )\n\n                this.pivot = new THREE.Group();\n                this.pivot.add( this.group )\n                this.pivot.position.set(-4, 0.1, 1.5)\n                this.pivot.rotation.set(-0.1, 0.3, 0.1)\n\n                this.scene.add( this.pivot );\n            },\n        );\n\n        this.camera.position.set( 0, 0, 7 );\n        this.renderer.render(this.scene,this.camera)\n        container.appendChild(this.renderer.domElement);\n        },\n        update: function(event) {\n          let inner = event.target.innerHTML\n          console.log(this.filtered_films);\n          this.filtered_films = []\n          console.log(this.films);\n          this.films[0].forEach(film => {\n            switch (inner) {\n              case \"war\":\n                this.filtered_films.push(film)\n              break;\n              case \"drama\":\n                this.filtered_films.push(film)\n              break;\n              case \"sci-fi\":\n                this.filtered_films.push(film)\n              break;\n              case \"romance\":\n                this.filtered_films.push(film)\n              break;\n              case \"adventure\":\n                this.filtered_films.push(film)\n              break;\n              case \"fantasy\":\n                this.filtered_films.push(film)\n              break;\n              case \"biopic\":\n                this.filtered_films.push(film)\n              break;\n              case \"thriller\":\n                this.filtered_films.push(film)\n              break;\n            }\n          });\n        },\n        filter: function(array) {\n          array.forEach(film => {\n          if (film['colors'] === 'cold') {\n            this.cold_films.push(film)\n          } else {\n            this.hot_films.push(film)\n          }\n            this.total_films.push(film)\n          })\n          that.cold_nbr = (this.cold_films.length/this.total_films.length) * 4\n        }\n    },\n  mounted() {\n    this.init(() => {\n        this.create3d()\n        this.animate()\n    })\n  }\n}\n</script>\n"]}]}