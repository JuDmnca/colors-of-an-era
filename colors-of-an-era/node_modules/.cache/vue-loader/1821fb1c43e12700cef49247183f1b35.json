{"remainingRequest":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/src/components/Scene.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/src/components/Scene.vue","mtime":1603285054740},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/cache-loader/dist/cjs.js","mtime":1603113174759},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/babel-loader/lib/index.js","mtime":1603113174629},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/cache-loader/dist/cjs.js","mtime":1603113174759},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/vue-loader/lib/index.js","mtime":1603113182020}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IE9yYml0Q29udHJvbHMgfSBmcm9tICJ0aHJlZS9leGFtcGxlcy9qc20vY29udHJvbHMvT3JiaXRDb250cm9scyI7CmltcG9ydCB7IEdMVEZMb2FkZXIgfSBmcm9tICd0aHJlZS9leGFtcGxlcy9qc20vbG9hZGVycy9HTFRGTG9hZGVyJzsKaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTY2VuZScsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNhbWVyYTogbnVsbCwKICAgICAgc2NlbmU6IG51bGwsCiAgICAgIHJlbmRlcmVyOiBudWxsLAogICAgICBtZXNoOiBudWxsLAogICAgICBjb2xkX25icjogMAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgaW5pdDogZnVuY3Rpb24oY2FsbGJhY2spIHsKICAgICAgdmFyIHJlcXVlc3RVUkwgPSAnL2ZpbG1zLmpzb24nOwogICAgICB2YXIgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOwogICAgICByZXF1ZXN0Lm9wZW4oJ0dFVCcsIHJlcXVlc3RVUkwpOwoKICAgICAgcmVxdWVzdC5yZXNwb25zZVR5cGUgPSAnanNvbic7CiAgICAgIHJlcXVlc3Quc2VuZCgpOwoKICAgICAgbGV0IGZpbG1zCiAgICAgIGxldCBjb2xkX2ZpbG1zID0gW10KICAgICAgbGV0IGhvdF9maWxtcyA9IFtdCiAgICAgIGxldCB0b3RhbF9maWxtcyA9IFtdCiAgICAgIGxldCB0aGF0ID0gdGhpcwoKICAgICAgcmVxdWVzdC5vbmxvYWQgPSBmdW5jdGlvbigpIHsKICAgICAgICBmaWxtcyA9IHJlcXVlc3QucmVzcG9uc2U7CgogICAgICAgIGZpbG1zWzBdLmZvckVhY2goZmlsbSA9PiB7CiAgICAgICAgICBpZiAoZmlsbVsnY29sb3JzJ10gPT09ICdjb2xkJykgewogICAgICAgICAgICAgIGNvbGRfZmlsbXMucHVzaChmaWxtKQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBob3RfZmlsbXMucHVzaChmaWxtKQogICAgICAgICAgfQogICAgICAgICAgdG90YWxfZmlsbXMucHVzaChmaWxtKQogICAgICAgIH0pOwoKICAgICAgICB0aGF0LmNvbGRfbmJyID0gKGNvbGRfZmlsbXMubGVuZ3RoL3RvdGFsX2ZpbG1zLmxlbmd0aCkgKiA0CiAgICAgICAgY2FsbGJhY2soKQogICAgICB9CiAgICB9LAogICAgYW5pbWF0ZTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuYW5pbWF0ZSk7CiAgICAgICAgdGhpcy5jb250cm9scy51cGRhdGUoKTsKICAgICAgICB0aGlzLnJlbmRlcmVyLnJlbmRlcih0aGlzLnNjZW5lLCB0aGlzLmNhbWVyYSk7CiAgICB9LAogICAgY3JlYXRlM2Q6IGZ1bmN0aW9uKCkgewogICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250YWluZXInKTsKICAgICAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWFpbi1jYW52YXMnKQoKICAgICAgICAvLyBTZXR1cCBTY2VuZQogICAgICAgIHRoaXMuc2NlbmUgPSBuZXcgVEhSRUUuU2NlbmUoKTsKICAgICAgICB0aGlzLmNhbWVyYSA9IG5ldyBUSFJFRS5QZXJzcGVjdGl2ZUNhbWVyYSg3NSwgd2luZG93LmlubmVyV2lkdGggLyB3aW5kb3cuaW5uZXJIZWlnaHQsIDAuMSwgMjAwMDApOwogICAgICAgIHRoaXMucmVuZGVyZXIgPSBuZXcgVEhSRUUuV2ViR0xSZW5kZXJlcih7CiAgICAgICAgICAgIGNhbnZhczogY2FudmFzCiAgICAgICAgfSk7CgogICAgICAgIHRoaXMucmVuZGVyZXIuc2V0U2l6ZSh3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0KQogICAgICAgIHRoaXMucmVuZGVyZXIuc2V0UGl4ZWxSYXRpbyh3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbykKCiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsICgpID0+IHsKICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRTaXplKHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQpCiAgICAgICAgICAgIHRoaXMucmVuZGVyZXIuc2V0UGl4ZWxSYXRpbyh3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbykKICAgICAgICB9KQoKICAgICAgICBsZXQgbWFuYWdlciA9IG5ldyBUSFJFRS5Mb2FkaW5nTWFuYWdlcigpOwogICAgICAgIGxldCB0ZXh0dXJlTG9hZGVyID0gbmV3IFRIUkVFLlRleHR1cmVMb2FkZXIobWFuYWdlcikKCiAgICAgICAgdmFyIGF4ZXNIZWxwZXIgPSBuZXcgVEhSRUUuQXhlc0hlbHBlciggMTAwMCApOwogICAgICAgIHRoaXMuc2NlbmUuYWRkKCBheGVzSGVscGVyICk7CiAgICAgICAgdGhpcy5jb250cm9scyA9IG5ldyBPcmJpdENvbnRyb2xzKCB0aGlzLmNhbWVyYSwgdGhpcy5yZW5kZXJlci5kb21FbGVtZW50ICk7CgogICAgICAgIGxldCB0ZXh0dXJlX3NpbHZlciA9IHRleHR1cmVMb2FkZXIubG9hZCgnL3RleHR1cmVzL3NpbHZlci5qcGcnKQogICAgICAgIGxldCBtYXRlcmlhbF9zaWx2ZXIgPSBuZXcgVEhSRUUuTWVzaE1hdGNhcE1hdGVyaWFsKHsKICAgICAgICAgICAgbWF0Y2FwOiB0ZXh0dXJlX3NpbHZlciwKICAgICAgICB9KQogICAgICAgIGxldCB0ZXh0dXJlX3RoZXJtbyA9IHRleHR1cmVMb2FkZXIubG9hZCgnL3RleHR1cmVzL3RoZXJtby5qcGcnKQogICAgICAgIGxldCBtYXRlcmlhbF90aGVybW8gPSBuZXcgVEhSRUUuTWVzaE1hdGNhcE1hdGVyaWFsKHsKICAgICAgICAgICAgbWF0Y2FwOiB0ZXh0dXJlX3RoZXJtbywKICAgICAgICB9KQogICAgICAgIGxldCB0ZXh0dXJlX2dyYWQgPSB0ZXh0dXJlTG9hZGVyLmxvYWQoJy90ZXh0dXJlcy9ncmFkLmpwZycpCiAgICAgICAgbGV0IG1hdGVyaWFsX2dyYWQgPSBuZXcgVEhSRUUuTWVzaE1hdGNhcE1hdGVyaWFsKHsKICAgICAgICAgICAgbWF0Y2FwOiB0ZXh0dXJlX2dyYWQsCiAgICAgICAgfSkKCiAgICAgICAgbGV0IHRfaG90ID0gdGV4dHVyZUxvYWRlci5sb2FkKCcvdGV4dHVyZXMvaG90LmpwZycpCiAgICAgICAgbGV0IG1faG90ID0gbmV3IFRIUkVFLk1lc2hNYXRjYXBNYXRlcmlhbCh7CiAgICAgICAgICAgIG1hdGNhcDogdF9ob3QsCiAgICAgICAgfSkKICAgICAgICBsZXQgdF9jb2xkID0gdGV4dHVyZUxvYWRlci5sb2FkKCcvdGV4dHVyZXMvY29sZC5qcGcnKQogICAgICAgIGxldCBtX2NvbGQgPSBuZXcgVEhSRUUuTWVzaE1hdGNhcE1hdGVyaWFsKHsKICAgICAgICAgICAgbWF0Y2FwOiB0X2NvbGQsCiAgICAgICAgfSkKCiAgICAgICAgbGV0IGdfaG90ID0gbmV3IFRIUkVFLkN5bGluZGVyQnVmZmVyR2VvbWV0cnkoMC4xLCAwLjEsICg0IC0gdGhpcy5jb2xkX25iciksIDEwMCk7CiAgICAgICAgbGV0IGdfY29sZCA9IG5ldyBUSFJFRS5DeWxpbmRlckJ1ZmZlckdlb21ldHJ5KDAuMSwgMC4xLCB0aGlzLmNvbGRfbmJyLCAxMDApOwoKICAgICAgICBsZXQgZ19weSA9IChnX2NvbGQucGFyYW1ldGVycy5oZWlnaHQvMikKICAgICAgICBsZXQgbGV2ZWwgPSAwLjQ1CgogICAgICAgIHRoaXMuY29sZCA9IG5ldyBUSFJFRS5NZXNoKGdfY29sZCwgbV9jb2xkKQogICAgICAgIHRoaXMuY29sZC5wb3NpdGlvbi54ID0gLTAuNQogICAgICAgIHRoaXMuY29sZC5wb3NpdGlvbi55ID0gZ19weSAtIGxldmVsCiAgICAgICAgdGhpcy5jb2xkLnBvc2l0aW9uLnogPSAwLjEKICAgICAgICB0aGlzLmhvdCA9IG5ldyBUSFJFRS5NZXNoKGdfaG90LCBtX2hvdCkKICAgICAgICB0aGlzLmhvdC5wb3NpdGlvbi54ID0gLTAuNQogICAgICAgIHRoaXMuaG90LnBvc2l0aW9uLnkgPSAyICogZ19weSArIGdfaG90LnBhcmFtZXRlcnMuaGVpZ2h0LzIgLSBsZXZlbAogICAgICAgIHRoaXMuaG90LnBvc2l0aW9uLnogPSAwLjEKCiAgICAgICAgdGhpcy5zY2VuZS5hZGQodGhpcy5ob3QsIHRoaXMuY29sZCk7CgogICAgICAgIGNvbnN0IGxvYWRlciA9IG5ldyBHTFRGTG9hZGVyKCk7CiAgICAgICAgbG9hZGVyLmxvYWQoCiAgICAgICAgICAgICcvdGhlcm1vMy5nbGInLAogICAgICAgICAgICAoZ2x0ZikgPT4gewogICAgICAgICAgICAgICAgLy8gY2FsbGVkIHdoZW4gdGhlIHJlc291cmNlIGlzIGxvYWRlZAogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZ2x0Zik7CgogICAgICAgICAgICAgICAgLy8gcG9pbnRpbmcgTWVzaAogICAgICAgICAgICAgICAgdGhpcy5hbm5lYXUgPSBnbHRmLnNjZW5lLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzFdCiAgICAgICAgICAgICAgICB0aGlzLnRoZXJtbyA9IGdsdGYuc2NlbmUuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMl0KICAgICAgICAgICAgICAgIHRoaXMudGV4dCA9IGdsdGYuc2NlbmUuY2hpbGRyZW5bMF0uY2hpbGRyZW5bM10KICAgICAgICAgICAgICAgIC8vIE92ZXJpZGluZyBNYXRlcmlhbAogICAgICAgICAgICAgICAgdGhpcy5hbm5lYXUubWF0ZXJpYWwgPSBtYXRlcmlhbF9zaWx2ZXIKICAgICAgICAgICAgICAgIHRoaXMudGhlcm1vLm1hdGVyaWFsID0gbWF0ZXJpYWxfdGhlcm1vCiAgICAgICAgICAgICAgICB0aGlzLnRleHQubWF0ZXJpYWwgPSBtYXRlcmlhbF9ncmFkCiAgICAgICAgICAgICAgICB0aGlzLnRleHQubWF0ZXJpYWwuc2lkZSA9IFRIUkVFLkRvdWJsZVNpZGUKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMudGV4dCk7CgogICAgICAgICAgICAgICAgdGhpcy5hbm5lYXUuc2NhbGUuc2V0KDAuMDEzLDAuMDEzLDAuMDEzKQogICAgICAgICAgICAgICAgdGhpcy5hbm5lYXUucG9zaXRpb24ueSA9IC0xCiAgICAgICAgICAgICAgICB0aGlzLmFubmVhdS5wb3NpdGlvbi56ID0gMAogICAgICAgICAgICAgICAgdGhpcy50aGVybW8uc2NhbGUuc2V0KDAuMDEzLDAuMDEzLDAuMDEzKQogICAgICAgICAgICAgICAgdGhpcy50aGVybW8ucG9zaXRpb24ueSA9IC0xCiAgICAgICAgICAgICAgICB0aGlzLnRoZXJtby5wb3NpdGlvbi56ID0gMAogICAgICAgICAgICAgICAgdGhpcy50ZXh0LnNjYWxlLnNldCgwLjAxMiwwLjAxMiwwLjAxMikKICAgICAgICAgICAgICAgIHRoaXMudGV4dC5wb3NpdGlvbi54ID0gMAogICAgICAgICAgICAgICAgdGhpcy50ZXh0LnBvc2l0aW9uLnkgPSAxLjUKICAgICAgICAgICAgICAgIHRoaXMudGV4dC5wb3NpdGlvbi56ID0gMC4xNQoKICAgICAgICAgICAgICAgIC8vIEFkZCB0byBzY2VuZQogICAgICAgICAgICAgICAgdGhpcy5zY2VuZS5hZGQodGhpcy5hbm5lYXUsIHRoaXMudGhlcm1vLCB0aGlzLnRleHQpOwogICAgICAgICAgICB9LAogICAgICAgICk7CgogICAgICAgIHRoaXMuY2FtZXJhLnBvc2l0aW9uLnNldCggMSwgNCwgMTAgKTsKICAgICAgICB0aGlzLmNvbnRyb2xzLnVwZGF0ZSgpOwogICAgICAgIHRoaXMucmVuZGVyZXIucmVuZGVyKHRoaXMuc2NlbmUsdGhpcy5jYW1lcmEpCiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMucmVuZGVyZXIuZG9tRWxlbWVudCk7CiAgICAgICAgfSwKICAgIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdCgoKSA9PiB7CiAgICAgICAgdGhpcy5jcmVhdGUzZCgpCiAgICAgICAgdGhpcy5hbmltYXRlKCk7CiAgICB9KQogIH0KfQo="},{"version":3,"sources":["Scene.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Scene.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class='container'>\n        <canvas class=\"main-canvas\"></canvas>\n    </div>\n</template>\n\n<script>\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three';\n\nexport default {\n  name: 'Scene',\n  data() {\n    return {\n      camera: null,\n      scene: null,\n      renderer: null,\n      mesh: null,\n      cold_nbr: 0\n    }\n  },\n  methods: {\n    init: function(callback) {\n      var requestURL = '/films.json';\n      var request = new XMLHttpRequest();\n      request.open('GET', requestURL);\n\n      request.responseType = 'json';\n      request.send();\n\n      let films\n      let cold_films = []\n      let hot_films = []\n      let total_films = []\n      let that = this\n\n      request.onload = function() {\n        films = request.response;\n\n        films[0].forEach(film => {\n          if (film['colors'] === 'cold') {\n              cold_films.push(film)\n          } else {\n              hot_films.push(film)\n          }\n          total_films.push(film)\n        });\n\n        that.cold_nbr = (cold_films.length/total_films.length) * 4\n        callback()\n      }\n    },\n    animate: function() {\n        requestAnimationFrame(this.animate);\n        this.controls.update();\n        this.renderer.render(this.scene, this.camera);\n    },\n    create3d: function() {\n        const container = document.querySelector('.container');\n        const canvas = document.querySelector('.main-canvas')\n\n        // Setup Scene\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 20000);\n        this.renderer = new THREE.WebGLRenderer({\n            canvas: canvas\n        });\n\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\n        this.renderer.setPixelRatio(window.devicePixelRatio)\n\n        window.addEventListener(\"resize\", () => {\n            this.renderer.setSize(window.innerWidth, window.innerHeight)\n            this.renderer.setPixelRatio(window.devicePixelRatio)\n        })\n\n        let manager = new THREE.LoadingManager();\n        let textureLoader = new THREE.TextureLoader(manager)\n\n        var axesHelper = new THREE.AxesHelper( 1000 );\n        this.scene.add( axesHelper );\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n\n        let texture_silver = textureLoader.load('/textures/silver.jpg')\n        let material_silver = new THREE.MeshMatcapMaterial({\n            matcap: texture_silver,\n        })\n        let texture_thermo = textureLoader.load('/textures/thermo.jpg')\n        let material_thermo = new THREE.MeshMatcapMaterial({\n            matcap: texture_thermo,\n        })\n        let texture_grad = textureLoader.load('/textures/grad.jpg')\n        let material_grad = new THREE.MeshMatcapMaterial({\n            matcap: texture_grad,\n        })\n\n        let t_hot = textureLoader.load('/textures/hot.jpg')\n        let m_hot = new THREE.MeshMatcapMaterial({\n            matcap: t_hot,\n        })\n        let t_cold = textureLoader.load('/textures/cold.jpg')\n        let m_cold = new THREE.MeshMatcapMaterial({\n            matcap: t_cold,\n        })\n\n        let g_hot = new THREE.CylinderBufferGeometry(0.1, 0.1, (4 - this.cold_nbr), 100);\n        let g_cold = new THREE.CylinderBufferGeometry(0.1, 0.1, this.cold_nbr, 100);\n\n        let g_py = (g_cold.parameters.height/2)\n        let level = 0.45\n\n        this.cold = new THREE.Mesh(g_cold, m_cold)\n        this.cold.position.x = -0.5\n        this.cold.position.y = g_py - level\n        this.cold.position.z = 0.1\n        this.hot = new THREE.Mesh(g_hot, m_hot)\n        this.hot.position.x = -0.5\n        this.hot.position.y = 2 * g_py + g_hot.parameters.height/2 - level\n        this.hot.position.z = 0.1\n\n        this.scene.add(this.hot, this.cold);\n\n        const loader = new GLTFLoader();\n        loader.load(\n            '/thermo3.glb',\n            (gltf) => {\n                // called when the resource is loaded\n                console.log(gltf);\n\n                // pointing Mesh\n                this.anneau = gltf.scene.children[0].children[1]\n                this.thermo = gltf.scene.children[0].children[2]\n                this.text = gltf.scene.children[0].children[3]\n                // Overiding Material\n                this.anneau.material = material_silver\n                this.thermo.material = material_thermo\n                this.text.material = material_grad\n                this.text.material.side = THREE.DoubleSide\n                console.log(this.text);\n\n                this.anneau.scale.set(0.013,0.013,0.013)\n                this.anneau.position.y = -1\n                this.anneau.position.z = 0\n                this.thermo.scale.set(0.013,0.013,0.013)\n                this.thermo.position.y = -1\n                this.thermo.position.z = 0\n                this.text.scale.set(0.012,0.012,0.012)\n                this.text.position.x = 0\n                this.text.position.y = 1.5\n                this.text.position.z = 0.15\n\n                // Add to scene\n                this.scene.add(this.anneau, this.thermo, this.text);\n            },\n        );\n\n        this.camera.position.set( 1, 4, 10 );\n        this.controls.update();\n        this.renderer.render(this.scene,this.camera)\n        container.appendChild(this.renderer.domElement);\n        },\n    },\n  mounted() {\n    this.init(() => {\n        this.create3d()\n        this.animate();\n    })\n  }\n}\n</script>\n"]}]}