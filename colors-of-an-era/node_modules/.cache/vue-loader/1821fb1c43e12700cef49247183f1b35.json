{"remainingRequest":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/src/components/Scene.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/src/components/Scene.vue","mtime":1603199049762},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/cache-loader/dist/cjs.js","mtime":1603113174759},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/babel-loader/lib/index.js","mtime":1603113174629},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/cache-loader/dist/cjs.js","mtime":1603113174759},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/vue-loader/lib/index.js","mtime":1603113182020}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IEdMVEZMb2FkZXIgfSBmcm9tICd0aHJlZS9leGFtcGxlcy9qc20vbG9hZGVycy9HTFRGTG9hZGVyJzsKaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTY2VuZScsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNhbWVyYTogbnVsbCwKICAgICAgc2NlbmU6IG51bGwsCiAgICAgIHJlbmRlcmVyOiBudWxsLAogICAgICBtZXNoOiBudWxsCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0OiBmdW5jdGlvbigpIHsKCiAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250YWluZXInKTsKICAgICAgY29uc3QgY2FudmFzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4tY2FudmFzJykKCiAgICAgIC8vIFNldHVwIFNjZW5lCiAgICAgIHRoaXMuc2NlbmUgPSBuZXcgVEhSRUUuU2NlbmUoKTsKICAgICAgdGhpcy5jYW1lcmEgPSBuZXcgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoMjUwLCB3aW5kb3cuaW5uZXJXaWR0aCAvIHdpbmRvdy5pbm5lckhlaWdodCwgMC4xLCAyMDAwMCk7CiAgICAgIHRoaXMucmVuZGVyZXIgPSBuZXcgVEhSRUUuV2ViR0xSZW5kZXJlcih7CiAgICAgICAgICBjYW52YXM6IGNhbnZhcwogICAgICB9KTsKCiAgICAgIHRoaXMucmVuZGVyZXIuc2V0U2l6ZSh3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0KQogICAgICB0aGlzLnJlbmRlcmVyLnNldFBpeGVsUmF0aW8od2luZG93LmRldmljZVBpeGVsUmF0aW8pCgogICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigicmVzaXplIiwgKCkgPT4gewogICAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRTaXplKHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQpCiAgICAgICAgICB0aGlzLnJlbmRlcmVyLnNldFBpeGVsUmF0aW8od2luZG93LmRldmljZVBpeGVsUmF0aW8pCiAgICAgIH0pCgogICAgICBsZXQgbWFuYWdlciA9IG5ldyBUSFJFRS5Mb2FkaW5nTWFuYWdlcigpOwogICAgICBsZXQgdGV4dHVyZUxvYWRlciA9IG5ldyBUSFJFRS5UZXh0dXJlTG9hZGVyKG1hbmFnZXIpCgogICAgICBsZXQgdGV4dHVyZSA9IHRleHR1cmVMb2FkZXIubG9hZCgnL3N1bi5wbmcnKQogICAgICBsZXQgbWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoewogICAgICAgIG1hcDogdGV4dHVyZSwKICAgICAgfSkKCiAgICAgIC8vdmFyIGN1YmVNYXRlcmlhbDIgPSBuZXcgVEhSRUUuTWVzaFBob25nTWF0ZXJpYWwoIHsgY29sb3I6IDB4Y2NmZmZkLCByZWZyYWN0aW9uUmF0aW86IDAuOTg1IH0gKTsKICAgICAgY29uc3QgcGF0aCA9ICcvJzsKICAgICAgY29uc3QgZm9ybWF0ID0gJy5wbmcnOwogICAgICBjb25zdCB1cmxzID0gWwogICAgICAgIHBhdGggKyAnc3VuJyArIGZvcm1hdCwgcGF0aCArICdzdW4nICsgZm9ybWF0LAogICAgICAgIHBhdGggKyAnc3VuJyArIGZvcm1hdCwgcGF0aCArICdzdW4nICsgZm9ybWF0LAogICAgICAgIHBhdGggKyAnc3VuJyArIGZvcm1hdCwgcGF0aCArICdzdW4nICsgZm9ybWF0CiAgICAgIF07CgogICAgICBjb25zdCByZWZsZWN0aW9uQ3ViZSA9IG5ldyBUSFJFRS5DdWJlVGV4dHVyZUxvYWRlcigpLmxvYWQoIHVybHMgKTsKICAgICAgY29uc3QgcmVmcmFjdGlvbkN1YmUgPSBuZXcgVEhSRUUuQ3ViZVRleHR1cmVMb2FkZXIoKS5sb2FkKCB1cmxzICk7CiAgICAgIHJlZnJhY3Rpb25DdWJlLm1hcHBpbmcgPSBUSFJFRS5DdWJlUmVmcmFjdGlvbk1hcHBpbmc7CgogICAgICB0aGlzLnNjZW5lLmJhY2tncm91bmQgPSByZWZsZWN0aW9uQ3ViZQoKICAgICAgY29uc3QgY3ViZU1hdGVyaWFsMiA9ICBuZXcgVEhSRUUuTWVzaExhbWJlcnRNYXRlcmlhbCggeyBjb2xvcjogMHhmZmZmZmYsIGVudk1hcDogcmVmcmFjdGlvbkN1YmUsIHJlZnJhY3Rpb25SYXRpbzogMC45NSB9ICk7CgogICAgICBjb25zdCBsb2FkZXIgPSBuZXcgR0xURkxvYWRlcigpOwogICAgICBsb2FkZXIubG9hZCgKICAgICAgICAgICcvMDFfVFJBTlMuZ2xiJywKICAgICAgICAgIChnbHRmKSA9PiB7CiAgICAgICAgICAgICAgLy8gY2FsbGVkIHdoZW4gdGhlIHJlc291cmNlIGlzIGxvYWRlZAogICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGdsdGYpOwoKICAgICAgICAgICAgICAvLyBwb2ludGluZyBNZXNoCiAgICAgICAgICAgICAgdGhpcy5tb2RlbCA9IGdsdGYuc2NlbmUuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMl0KICAgICAgICAgICAgICAvLyBPdmVyaWRpbmcgTWF0ZXJpYWwKICAgICAgICAgICAgICBjdWJlTWF0ZXJpYWwyLnRyYW5zcGFyZW50ID0gdHJ1ZQogICAgICAgICAgICAgIGN1YmVNYXRlcmlhbDIub3BhY2l0eSA9IDAuNwogICAgICAgICAgICAgIGN1YmVNYXRlcmlhbDIuc2lkZSA9IFRIUkVFLkRvdWJsZVNpZGUKICAgICAgICAgICAgICB0aGlzLm1vZGVsLm1hdGVyaWFsID0gY3ViZU1hdGVyaWFsMgogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMubW9kZWwpOwoKICAgICAgICAgICAgICB0aGlzLm1vZGVsLnNjYWxlLnNldCgyLDIsMik7CgogICAgICAgICAgICAgIC8vIEFkZCB0byBzY2VuZQogICAgICAgICAgICAgIHRoaXMuc2NlbmUuYWRkKHRoaXMubW9kZWwpOwogICAgICAgICAgICAgIHRoaXMuYW5pbWF0ZSgpOwogICAgICAgICAgfSwKICAgICAgKTsKCiAgICAgICAgdmFyIGF4ZXNIZWxwZXIgPSBuZXcgVEhSRUUuQXhlc0hlbHBlciggMTAwMCApOwogICAgICAgIHRoaXMuc2NlbmUuYWRkKCBheGVzSGVscGVyICk7CgogICAgICAgIGNvbnN0IGFtYmllbnQgPSBuZXcgVEhSRUUuQW1iaWVudExpZ2h0KCAweGZmZmZmZiApOwogICAgICAgIHRoaXMuc2NlbmUuYWRkKCBhbWJpZW50ICk7CgogICAgICAgIGxldCBwb2ludExpZ2h0ID0gbmV3IFRIUkVFLlBvaW50TGlnaHQoIDB4ZmZmZmZmLCAyICk7CiAgICAgICAgdGhpcy5zY2VuZS5hZGQoIHBvaW50TGlnaHQgKTsKCiAgICAgICAgdGhpcy5jYW1lcmEucG9zaXRpb24uc2V0KCAxLCAxLCA1MDAgKTsKICAgICAgICB0aGlzLnJlbmRlcmVyLnJlbmRlcih0aGlzLnNjZW5lLHRoaXMuY2FtZXJhKQogICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLnJlbmRlcmVyLmRvbUVsZW1lbnQpOwoKICAgIH0sCiAgICBhbmltYXRlOiBmdW5jdGlvbigpIHsKICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5hbmltYXRlKTsKICAgICAgICB0aGlzLm1vZGVsLnJvdGF0aW9uLnggKz0gMC4wMQogICAgICAgIHRoaXMubW9kZWwucm90YXRpb24ueSArPSAwLjAxCiAgICAgICAgdGhpcy5yZW5kZXJlci5yZW5kZXIodGhpcy5zY2VuZSwgdGhpcy5jYW1lcmEpOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmluaXQoKTsKICB9Cn0K"},{"version":3,"sources":["Scene.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Scene.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class='container'>\n        <canvas class=\"main-canvas\"></canvas>\n    </div>\n</template>\n\n<script>\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three';\n\nexport default {\n  name: 'Scene',\n  data() {\n    return {\n      camera: null,\n      scene: null,\n      renderer: null,\n      mesh: null\n    }\n  },\n  methods: {\n    init: function() {\n\n      const container = document.querySelector('.container');\n      const canvas = document.querySelector('.main-canvas')\n\n      // Setup Scene\n      this.scene = new THREE.Scene();\n      this.camera = new THREE.PerspectiveCamera(250, window.innerWidth / window.innerHeight, 0.1, 20000);\n      this.renderer = new THREE.WebGLRenderer({\n          canvas: canvas\n      });\n\n      this.renderer.setSize(window.innerWidth, window.innerHeight)\n      this.renderer.setPixelRatio(window.devicePixelRatio)\n\n      window.addEventListener(\"resize\", () => {\n          this.renderer.setSize(window.innerWidth, window.innerHeight)\n          this.renderer.setPixelRatio(window.devicePixelRatio)\n      })\n\n      let manager = new THREE.LoadingManager();\n      let textureLoader = new THREE.TextureLoader(manager)\n\n      let texture = textureLoader.load('/sun.png')\n      let material = new THREE.MeshBasicMaterial({\n        map: texture,\n      })\n\n      //var cubeMaterial2 = new THREE.MeshPhongMaterial( { color: 0xccfffd, refractionRatio: 0.985 } );\n      const path = '/';\n      const format = '.png';\n      const urls = [\n        path + 'sun' + format, path + 'sun' + format,\n        path + 'sun' + format, path + 'sun' + format,\n        path + 'sun' + format, path + 'sun' + format\n      ];\n\n      const reflectionCube = new THREE.CubeTextureLoader().load( urls );\n      const refractionCube = new THREE.CubeTextureLoader().load( urls );\n      refractionCube.mapping = THREE.CubeRefractionMapping;\n\n      this.scene.background = reflectionCube\n\n      const cubeMaterial2 =  new THREE.MeshLambertMaterial( { color: 0xffffff, envMap: refractionCube, refractionRatio: 0.95 } );\n\n      const loader = new GLTFLoader();\n      loader.load(\n          '/01_TRANS.glb',\n          (gltf) => {\n              // called when the resource is loaded\n              // console.log(gltf);\n\n              // pointing Mesh\n              this.model = gltf.scene.children[0].children[2]\n              // Overiding Material\n              cubeMaterial2.transparent = true\n              cubeMaterial2.opacity = 0.7\n              cubeMaterial2.side = THREE.DoubleSide\n              this.model.material = cubeMaterial2\n              console.log(this.model);\n\n              this.model.scale.set(2,2,2);\n\n              // Add to scene\n              this.scene.add(this.model);\n              this.animate();\n          },\n      );\n\n        var axesHelper = new THREE.AxesHelper( 1000 );\n        this.scene.add( axesHelper );\n\n        const ambient = new THREE.AmbientLight( 0xffffff );\n        this.scene.add( ambient );\n\n        let pointLight = new THREE.PointLight( 0xffffff, 2 );\n        this.scene.add( pointLight );\n\n        this.camera.position.set( 1, 1, 500 );\n        this.renderer.render(this.scene,this.camera)\n        container.appendChild(this.renderer.domElement);\n\n    },\n    animate: function() {\n        requestAnimationFrame(this.animate);\n        this.model.rotation.x += 0.01\n        this.model.rotation.y += 0.01\n        this.renderer.render(this.scene, this.camera);\n    }\n  },\n  mounted() {\n        this.init();\n  }\n}\n</script>\n"]}]}