{"remainingRequest":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/thread-loader/dist/cjs.js!/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/babel-loader/lib/index.js!/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/src/components/Scene.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/src/components/Scene.vue","mtime":1603295585082},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/cache-loader/dist/cjs.js","mtime":1603113174759},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/thread-loader/dist/cjs.js","mtime":1603113181587},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/babel-loader/lib/index.js","mtime":1603113174629},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/cache-loader/dist/cjs.js","mtime":1603113174759},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/vue-loader/lib/index.js","mtime":1603113182020}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgT3JiaXRDb250cm9scyB9IGZyb20gInRocmVlL2V4YW1wbGVzL2pzbS9jb250cm9scy9PcmJpdENvbnRyb2xzIjsKaW1wb3J0IHsgR0xURkxvYWRlciB9IGZyb20gJ3RocmVlL2V4YW1wbGVzL2pzbS9sb2FkZXJzL0dMVEZMb2FkZXInOwppbXBvcnQgKiBhcyBUSFJFRSBmcm9tICd0aHJlZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2NlbmUnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjYW1lcmE6IG51bGwsCiAgICAgIHNjZW5lOiBudWxsLAogICAgICByZW5kZXJlcjogbnVsbCwKICAgICAgbWVzaDogbnVsbCwKICAgICAgY29sZF9uYnI6IDAKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0OiBmdW5jdGlvbiBpbml0KGNhbGxiYWNrKSB7CiAgICAgIHZhciByZXF1ZXN0VVJMID0gJy9maWxtcy5qc29uJzsKICAgICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgICAgcmVxdWVzdC5vcGVuKCdHRVQnLCByZXF1ZXN0VVJMKTsKICAgICAgcmVxdWVzdC5yZXNwb25zZVR5cGUgPSAnanNvbic7CiAgICAgIHJlcXVlc3Quc2VuZCgpOwogICAgICB2YXIgZmlsbXM7CiAgICAgIHZhciBjb2xkX2ZpbG1zID0gW107CiAgICAgIHZhciBob3RfZmlsbXMgPSBbXTsKICAgICAgdmFyIHRvdGFsX2ZpbG1zID0gW107CiAgICAgIHZhciB0aGF0ID0gdGhpczsKCiAgICAgIHJlcXVlc3Qub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgIGZpbG1zID0gcmVxdWVzdC5yZXNwb25zZTsKICAgICAgICBmaWxtc1swXS5mb3JFYWNoKGZ1bmN0aW9uIChmaWxtKSB7CiAgICAgICAgICBpZiAoZmlsbVsnY29sb3JzJ10gPT09ICdjb2xkJykgewogICAgICAgICAgICBjb2xkX2ZpbG1zLnB1c2goZmlsbSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBob3RfZmlsbXMucHVzaChmaWxtKTsKICAgICAgICAgIH0KCiAgICAgICAgICB0b3RhbF9maWxtcy5wdXNoKGZpbG0pOwogICAgICAgIH0pOwogICAgICAgIHRoYXQuY29sZF9uYnIgPSBjb2xkX2ZpbG1zLmxlbmd0aCAvIHRvdGFsX2ZpbG1zLmxlbmd0aCAqIDQ7CiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgfTsKICAgIH0sCiAgICBhbmltYXRlOiBmdW5jdGlvbiBhbmltYXRlKCkgewogICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5hbmltYXRlKTsKICAgICAgdGhpcy5jb250cm9scy51cGRhdGUoKTsKICAgICAgdGhpcy5yZW5kZXJlci5yZW5kZXIodGhpcy5zY2VuZSwgdGhpcy5jYW1lcmEpOwogICAgfSwKICAgIGNyZWF0ZTNkOiBmdW5jdGlvbiBjcmVhdGUzZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGFpbmVyJyk7CiAgICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWFpbi1jYW52YXMnKTsgLy8gU2V0dXAgU2NlbmUKCiAgICAgIHRoaXMuc2NlbmUgPSBuZXcgVEhSRUUuU2NlbmUoKTsKICAgICAgdGhpcy5jYW1lcmEgPSBuZXcgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoNzUsIHdpbmRvdy5pbm5lcldpZHRoIC8gd2luZG93LmlubmVySGVpZ2h0LCAwLjEsIDIwMDAwKTsKICAgICAgdGhpcy5yZW5kZXJlciA9IG5ldyBUSFJFRS5XZWJHTFJlbmRlcmVyKHsKICAgICAgICBjYW52YXM6IGNhbnZhcwogICAgICB9KTsKICAgICAgdGhpcy5yZW5kZXJlci5zZXRTaXplKHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQpOwogICAgICB0aGlzLnJlbmRlcmVyLnNldFBpeGVsUmF0aW8od2luZG93LmRldmljZVBpeGVsUmF0aW8pOwogICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigicmVzaXplIiwgZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLnJlbmRlcmVyLnNldFNpemUod2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodCk7CgogICAgICAgIF90aGlzLnJlbmRlcmVyLnNldFBpeGVsUmF0aW8od2luZG93LmRldmljZVBpeGVsUmF0aW8pOwogICAgICB9KTsKICAgICAgdmFyIG1hbmFnZXIgPSBuZXcgVEhSRUUuTG9hZGluZ01hbmFnZXIoKTsKICAgICAgdmFyIHRleHR1cmVMb2FkZXIgPSBuZXcgVEhSRUUuVGV4dHVyZUxvYWRlcihtYW5hZ2VyKTsKICAgICAgdmFyIGF4ZXNIZWxwZXIgPSBuZXcgVEhSRUUuQXhlc0hlbHBlcigxMDAwKTsKICAgICAgdGhpcy5zY2VuZS5hZGQoYXhlc0hlbHBlcik7CiAgICAgIHRoaXMuY29udHJvbHMgPSBuZXcgT3JiaXRDb250cm9scyh0aGlzLmNhbWVyYSwgdGhpcy5yZW5kZXJlci5kb21FbGVtZW50KTsKICAgICAgdmFyIHRleHR1cmVfc2lsdmVyID0gdGV4dHVyZUxvYWRlci5sb2FkKCcvdGV4dHVyZXMvc2lsdmVyLmpwZycpOwogICAgICB2YXIgbWF0ZXJpYWxfc2lsdmVyID0gbmV3IFRIUkVFLk1lc2hNYXRjYXBNYXRlcmlhbCh7CiAgICAgICAgbWF0Y2FwOiB0ZXh0dXJlX3NpbHZlcgogICAgICB9KTsKICAgICAgdmFyIHRleHR1cmVfdGhlcm1vID0gdGV4dHVyZUxvYWRlci5sb2FkKCcvdGV4dHVyZXMvdGhlcm1vLmpwZycpOwogICAgICB2YXIgbWF0ZXJpYWxfdGhlcm1vID0gbmV3IFRIUkVFLk1lc2hNYXRjYXBNYXRlcmlhbCh7CiAgICAgICAgbWF0Y2FwOiB0ZXh0dXJlX3RoZXJtbwogICAgICB9KTsKICAgICAgdmFyIHRleHR1cmVfZ3JhZCA9IHRleHR1cmVMb2FkZXIubG9hZCgnL3RleHR1cmVzL2dyYWQuanBnJyk7CiAgICAgIHZhciBtYXRlcmlhbF9ncmFkID0gbmV3IFRIUkVFLk1lc2hNYXRjYXBNYXRlcmlhbCh7CiAgICAgICAgbWF0Y2FwOiB0ZXh0dXJlX2dyYWQKICAgICAgfSk7CiAgICAgIHZhciB0X2hvdCA9IHRleHR1cmVMb2FkZXIubG9hZCgnL3RleHR1cmVzL2hvdC5qcGcnKTsKICAgICAgdmFyIG1faG90ID0gbmV3IFRIUkVFLk1lc2hNYXRjYXBNYXRlcmlhbCh7CiAgICAgICAgbWF0Y2FwOiB0X2hvdAogICAgICB9KTsKICAgICAgdmFyIHRfY29sZCA9IHRleHR1cmVMb2FkZXIubG9hZCgnL3RleHR1cmVzL2NvbGQuanBnJyk7CiAgICAgIHZhciBtX2NvbGQgPSBuZXcgVEhSRUUuTWVzaE1hdGNhcE1hdGVyaWFsKHsKICAgICAgICBtYXRjYXA6IHRfY29sZAogICAgICB9KTsKICAgICAgdmFyIGdfaG90ID0gbmV3IFRIUkVFLkN5bGluZGVyQnVmZmVyR2VvbWV0cnkoMC4xLCAwLjEsIDQgLSB0aGlzLmNvbGRfbmJyLCAxMDApOwogICAgICB2YXIgZ19jb2xkID0gbmV3IFRIUkVFLkN5bGluZGVyQnVmZmVyR2VvbWV0cnkoMC4xLCAwLjEsIHRoaXMuY29sZF9uYnIsIDEwMCk7CiAgICAgIHZhciBnX3B5ID0gZ19jb2xkLnBhcmFtZXRlcnMuaGVpZ2h0IC8gMjsKICAgICAgdmFyIGxldmVsID0gMi4yOwogICAgICB0aGlzLmNvbGQgPSBuZXcgVEhSRUUuTWVzaChnX2NvbGQsIG1fY29sZCk7CiAgICAgIHRoaXMuY29sZC5wb3NpdGlvbi5zZXQoLTQuNSwgZ19weSAtIGxldmVsLCAwLjEpOwogICAgICB0aGlzLmhvdCA9IG5ldyBUSFJFRS5NZXNoKGdfaG90LCBtX2hvdCk7CiAgICAgIHRoaXMuaG90LnBvc2l0aW9uLnNldCgtNC41LCAyICogZ19weSArIGdfaG90LnBhcmFtZXRlcnMuaGVpZ2h0IC8gMiAtIGxldmVsLCAwLjEpOwogICAgICB0aGlzLnNjZW5lLmFkZCh0aGlzLmhvdCwgdGhpcy5jb2xkKTsKICAgICAgdmFyIGxvYWRlciA9IG5ldyBHTFRGTG9hZGVyKCk7CiAgICAgIGxvYWRlci5sb2FkKCcvdGhlcm1vMy5nbGInLCBmdW5jdGlvbiAoZ2x0ZikgewogICAgICAgIC8vIGNhbGxlZCB3aGVuIHRoZSByZXNvdXJjZSBpcyBsb2FkZWQKICAgICAgICBjb25zb2xlLmxvZyhnbHRmKTsgLy8gcG9pbnRpbmcgTWVzaAoKICAgICAgICBnbHRmLnNjZW5lLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzFdLmdlb21ldHJ5LmNlbnRlcigpOwogICAgICAgIGdsdGYuc2NlbmUuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMl0uZ2VvbWV0cnkuY2VudGVyKCk7CiAgICAgICAgZ2x0Zi5zY2VuZS5jaGlsZHJlblswXS5jaGlsZHJlblszXS5nZW9tZXRyeS5jZW50ZXIoKTsKICAgICAgICBfdGhpcy5hbm5lYXUgPSBnbHRmLnNjZW5lLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzFdOwogICAgICAgIF90aGlzLnRoZXJtbyA9IGdsdGYuc2NlbmUuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMl07CiAgICAgICAgX3RoaXMudGV4dCA9IGdsdGYuc2NlbmUuY2hpbGRyZW5bMF0uY2hpbGRyZW5bM107IC8vIE92ZXJpZGluZyBNYXRlcmlhbAoKICAgICAgICBfdGhpcy5hbm5lYXUubWF0ZXJpYWwgPSBtYXRlcmlhbF9zaWx2ZXI7CiAgICAgICAgX3RoaXMudGhlcm1vLm1hdGVyaWFsID0gbWF0ZXJpYWxfdGhlcm1vOwogICAgICAgIF90aGlzLnRleHQubWF0ZXJpYWwgPSBtYXRlcmlhbF9ncmFkOwogICAgICAgIF90aGlzLnRleHQubWF0ZXJpYWwuc2lkZSA9IFRIUkVFLkRvdWJsZVNpZGU7CgogICAgICAgIF90aGlzLmFubmVhdS5zY2FsZS5zZXQoMC4wMTMsIDAuMDEzLCAwLjAxMyk7CgogICAgICAgIF90aGlzLmFubmVhdS5wb3NpdGlvbi5zZXQoLTMuOSwgMi44LCAwKTsKCiAgICAgICAgX3RoaXMudGhlcm1vLnNjYWxlLnNldCgwLjAxMywgMC4wMTMsIDAuMDEzKTsKCiAgICAgICAgX3RoaXMudGhlcm1vLnBvc2l0aW9uLnNldCgtNCwgMCwgMCk7CgogICAgICAgIF90aGlzLnRleHQuc2NhbGUuc2V0KDAuMDEyLCAwLjAxMiwgMC4wMTIpOwoKICAgICAgICBfdGhpcy50ZXh0LnBvc2l0aW9uLnNldCgtMy44LCAtMC4yLCAwLjE1KTsgLy8gQWRkIHRvIHNjZW5lCgoKICAgICAgICBfdGhpcy5ncm91cCA9IG5ldyBUSFJFRS5Hcm91cCgpOwoKICAgICAgICBfdGhpcy5ncm91cC5hZGQoX3RoaXMuYW5uZWF1KTsKCiAgICAgICAgX3RoaXMuZ3JvdXAuYWRkKF90aGlzLnRoZXJtbyk7CgogICAgICAgIF90aGlzLmdyb3VwLmFkZChfdGhpcy50ZXh0KTsKCiAgICAgICAgX3RoaXMuZ3JvdXAucm90YXRpb24ueCA9IDAuNTsKCiAgICAgICAgX3RoaXMuc2NlbmUuYWRkKF90aGlzLmdyb3VwKTsKICAgICAgfSk7CiAgICAgIHRoaXMuY2FtZXJhLnBvc2l0aW9uLnNldCgwLCAwLCA1KTsKICAgICAgdGhpcy5jb250cm9scy51cGRhdGUoKTsKICAgICAgdGhpcy5yZW5kZXJlci5yZW5kZXIodGhpcy5zY2VuZSwgdGhpcy5jYW1lcmEpOwogICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5yZW5kZXJlci5kb21FbGVtZW50KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICB0aGlzLmluaXQoZnVuY3Rpb24gKCkgewogICAgICBfdGhpczIuY3JlYXRlM2QoKTsKCiAgICAgIF90aGlzMi5hbmltYXRlKCk7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["Scene.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class='container'>\n        <canvas class=\"main-canvas\"></canvas>\n    </div>\n</template>\n\n<script>\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three';\n\nexport default {\n  name: 'Scene',\n  data() {\n    return {\n      camera: null,\n      scene: null,\n      renderer: null,\n      mesh: null,\n      cold_nbr: 0\n    }\n  },\n  methods: {\n    init: function(callback) {\n      var requestURL = '/films.json';\n      var request = new XMLHttpRequest();\n      request.open('GET', requestURL);\n\n      request.responseType = 'json';\n      request.send();\n\n      let films\n      let cold_films = []\n      let hot_films = []\n      let total_films = []\n      let that = this\n\n      request.onload = function() {\n        films = request.response;\n\n        films[0].forEach(film => {\n          if (film['colors'] === 'cold') {\n              cold_films.push(film)\n          } else {\n              hot_films.push(film)\n          }\n          total_films.push(film)\n        });\n\n        that.cold_nbr = (cold_films.length/total_films.length) * 4\n        callback()\n      }\n    },\n    animate: function() {\n        requestAnimationFrame(this.animate);\n        this.controls.update();\n        this.renderer.render(this.scene, this.camera);\n    },\n    create3d: function() {\n        const container = document.querySelector('.container');\n        const canvas = document.querySelector('.main-canvas')\n\n        // Setup Scene\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 20000);\n        this.renderer = new THREE.WebGLRenderer({\n            canvas: canvas\n        });\n\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\n        this.renderer.setPixelRatio(window.devicePixelRatio)\n\n        window.addEventListener(\"resize\", () => {\n            this.renderer.setSize(window.innerWidth, window.innerHeight)\n            this.renderer.setPixelRatio(window.devicePixelRatio)\n        })\n\n        let manager = new THREE.LoadingManager();\n        let textureLoader = new THREE.TextureLoader(manager)\n\n        var axesHelper = new THREE.AxesHelper( 1000 );\n        this.scene.add( axesHelper );\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n\n        let texture_silver = textureLoader.load('/textures/silver.jpg')\n        let material_silver = new THREE.MeshMatcapMaterial({\n            matcap: texture_silver,\n        })\n        let texture_thermo = textureLoader.load('/textures/thermo.jpg')\n        let material_thermo = new THREE.MeshMatcapMaterial({\n            matcap: texture_thermo,\n        })\n        let texture_grad = textureLoader.load('/textures/grad.jpg')\n        let material_grad = new THREE.MeshMatcapMaterial({\n            matcap: texture_grad,\n        })\n\n        let t_hot = textureLoader.load('/textures/hot.jpg')\n        let m_hot = new THREE.MeshMatcapMaterial({\n            matcap: t_hot,\n        })\n        let t_cold = textureLoader.load('/textures/cold.jpg')\n        let m_cold = new THREE.MeshMatcapMaterial({\n            matcap: t_cold,\n        })\n\n        let g_hot = new THREE.CylinderBufferGeometry(0.1, 0.1, (4 - this.cold_nbr), 100);\n        let g_cold = new THREE.CylinderBufferGeometry(0.1, 0.1, this.cold_nbr, 100);\n\n        let g_py = (g_cold.parameters.height/2)\n        let level = 2.2\n\n        this.cold = new THREE.Mesh(g_cold, m_cold)\n        this.cold.position.set(-4.5, g_py - level, 0.1)\n        this.hot = new THREE.Mesh(g_hot, m_hot)\n        this.hot.position.set(-4.5, 2 * g_py + g_hot.parameters.height/2 - level, 0.1)\n\n        this.scene.add(this.hot, this.cold);\n\n        const loader = new GLTFLoader();\n        loader.load(\n            '/thermo3.glb',\n            (gltf) => {\n                // called when the resource is loaded\n                console.log(gltf);\n\n                // pointing Mesh\n                gltf.scene.children[0].children[1].geometry.center()\n                gltf.scene.children[0].children[2].geometry.center()\n                gltf.scene.children[0].children[3].geometry.center()\n\n                this.anneau = gltf.scene.children[0].children[1]\n                this.thermo = gltf.scene.children[0].children[2]\n                this.text = gltf.scene.children[0].children[3]\n                // Overiding Material\n                this.anneau.material = material_silver\n                this.thermo.material = material_thermo\n                this.text.material = material_grad\n                this.text.material.side = THREE.DoubleSide\n\n                this.anneau.scale.set(0.013,0.013,0.013)\n                this.anneau.position.set(-3.9, 2.8, 0)\n\n                this.thermo.scale.set(0.013,0.013,0.013)\n                this.thermo.position.set(-4, 0, 0)\n\n                this.text.scale.set(0.012,0.012,0.012)\n                this.text.position.set(-3.8, -0.2, 0.15)\n\n                // Add to scene\n\n                this.group = new THREE.Group();\n                  this.group.add( this.anneau );\n                  this.group.add( this.thermo );\n                  this.group.add( this.text );\n\n                  this.group.rotation.x = 0.5\n\n                this.scene.add( this.group );\n            },\n        );\n\n        this.camera.position.set( 0, 0, 5 );\n        this.controls.update();\n        this.renderer.render(this.scene,this.camera)\n        container.appendChild(this.renderer.domElement);\n        },\n    },\n  mounted() {\n    this.init(() => {\n        this.create3d()\n        this.animate();\n    })\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}