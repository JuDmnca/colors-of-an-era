{"remainingRequest":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/babel-loader/lib/index.js!/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/src/components/Scene.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/src/components/Scene.vue","mtime":1603451811051},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/cache-loader/dist/cjs.js","mtime":1603113174759},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/babel-loader/lib/index.js","mtime":1603113174629},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/cache-loader/dist/cjs.js","mtime":1603113174759},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/vue-loader/lib/index.js","mtime":1603113182020}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Scene.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA,SAAA,aAAA,QAAA,2CAAA;AACA,SAAA,UAAA,QAAA,uCAAA;AACA,OAAA,KAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,wBAAA;AACA,OAAA,KAAA,MAAA,uBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA,IAFA;AAGA,MAAA,QAAA,EAAA,IAHA;AAIA,MAAA,IAAA,EAAA,IAJA;AAKA,MAAA,QAAA,EAAA,CALA;AAMA,MAAA,eAAA,EAAA,CANA;AAOA,MAAA,UAAA,EAAA,wBAPA;AAQA,MAAA,SAAA,EAAA,YARA;AASA,MAAA,WAAA,EAAA,gBATA;AAUA,MAAA,IAAA,EAAA,CAVA;AAWA,MAAA,KAAA,EAAA,CAXA;AAYA,MAAA,KAAA,EAAA,IAZA;AAaA,MAAA,UAAA,EAAA,EAbA;AAcA,MAAA,SAAA,EAAA,EAdA;AAeA,MAAA,WAAA,EAAA,EAfA;AAgBA,MAAA,cAAA,EAAA,EAhBA;AAiBA,MAAA,MAAA,EAAA,CACA,CAAA,KAAA,CADA,CAjBA;AAoBA,MAAA,MAAA,EAAA;AApBA,KAAA;AAsBA,GAzBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,IAAA,EAAA,cAAA,QAAA,EAAA;AACA,UAAA,UAAA,GAAA,cAAA;AACA,UAAA,OAAA,GAAA,IAAA,cAAA,EAAA;AACA,MAAA,OAAA,CAAA,IAAA,CAAA,KAAA,EAAA,UAAA;AAEA,MAAA,OAAA,CAAA,YAAA,GAAA,MAAA;AACA,MAAA,OAAA,CAAA,IAAA;AAEA,UAAA,IAAA,GAAA,IAAA;;AAEA,MAAA,OAAA,CAAA,MAAA,GAAA,YAAA;AACA,QAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,QAAA;AAEA,QAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,CAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,EAAA;AACA,YAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA;AACA;AACA,SAJA;AAMA,QAAA,IAAA,CAAA,MAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,cAAA,EAAA,GAAA,QAAA,CAAA,aAAA,CAAA,IAAA,CAAA;AACA,cAAA,CAAA,GAAA,QAAA,CAAA,cAAA,CAAA,KAAA,CAAA;AACA,UAAA,EAAA,CAAA,WAAA,CAAA,CAAA;AACA,UAAA,EAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,MAAA;AACA,UAAA,QAAA,CAAA,cAAA,CAAA,MAAA,EAAA,WAAA,CAAA,EAAA;AACA,SANA;AAQA,QAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,IAAA,CAAA,QAAA,CAAA,KAAA,MAAA,EAAA;AACA,YAAA,IAAA,CAAA,UAAA,CAAA,IAAA,CAAA,IAAA;AACA,WAFA,MAEA;AACA,YAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA,UAAA,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,IAAA;AACA,SAPA;AASA,QAAA,IAAA,CAAA,eAAA,GAAA,IAAA,CAAA,UAAA,CAAA,MAAA,GAAA,IAAA,CAAA,WAAA,CAAA,MAAA,GAAA,CAAA;AAEA,QAAA,QAAA;AACA,QAAA,IAAA,CAAA,WAAA;AACA,OA9BA;AA+BA,KA1CA;AA2CA,IAAA,IAAA,EAAA,cAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA;AACA,MAAA,MAAA,GAAA,MAAA,GAAA,CAAA,GAAA,CAAA,GAAA,MAAA;AACA,MAAA,MAAA,GAAA,MAAA,GAAA,CAAA,GAAA,CAAA,GAAA,MAAA;AACA,aAAA,MAAA,GAAA,CAAA,MAAA,GAAA,MAAA,IAAA,MAAA;AACA,KA/CA;AAgDA,IAAA,OAAA,EAAA,mBAAA;AACA,MAAA,qBAAA,CAAA,KAAA,OAAA,CAAA;AACA,WAAA,IAAA,IAAA,IAAA;AACA,WAAA,KAAA,IAAA,IAAA;AAEA,WAAA,QAAA,GAAA,KAAA,IAAA,CAAA,KAAA,QAAA,EAAA,KAAA,eAAA,EAAA,GAAA,CAAA;AAEA,WAAA,IAAA,GAAA,KAAA,MAAA,CAAA,UAAA,CAAA,MAAA,GAAA,KAAA,QAAA,GAAA,CAAA;AACA,WAAA,MAAA,CAAA,KAAA,CAAA,CAAA,GAAA,KAAA,QAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,EAAA,KAAA,IAAA,GAAA,KAAA,KAAA,EAAA,GAAA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,QAAA;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,EAAA,IAAA,KAAA,IAAA,GAAA,KAAA,KAAA,CAAA,UAAA,CAAA,MAAA,IAAA,IAAA,KAAA,QAAA,IAAA,CAAA,GAAA,KAAA,KAAA,EAAA,GAAA;;AAEA,UAAA,KAAA,MAAA,KAAA,IAAA,EAAA;AACA,aAAA,WAAA;AACA,aAAA,MAAA,GAAA,KAAA;AACA;;AAEA,UAAA,KAAA,KAAA,GAAA,CAAA,EAAA;AACA,YAAA,KAAA,WAAA,KAAA,WAAA,EAAA;AACA,eAAA,KAAA,CAAA,QAAA,CAAA,CAAA,GAAA,KAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA;AACA,eAAA,KAAA,CAAA,QAAA,CAAA,CAAA,GAAA,KAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AACA,SAHA,MAGA,IAAA,KAAA,WAAA,KAAA,UAAA,EAAA;AACA,eAAA,KAAA,CAAA,QAAA,CAAA,CAAA,GAAA,KAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA;AACA,eAAA,KAAA,CAAA,QAAA,CAAA,CAAA,GAAA,KAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,GAAA,EAAA,GAAA,CAAA;AACA;AACA;;AAEA,UAAA,KAAA,IAAA,GAAA,CAAA,EAAA;AACA,YAAA,KAAA,WAAA,KAAA,WAAA,EAAA;AACA,eAAA,KAAA,CAAA,QAAA,CAAA,CAAA,GAAA,KAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AACA,eAAA,KAAA,CAAA,QAAA,CAAA,CAAA,GAAA,KAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA;AACA,eAAA,KAAA,CAAA,QAAA,CAAA,CAAA,GAAA,KAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AACA,SAJA,MAIA,IAAA,KAAA,WAAA,KAAA,UAAA,EAAA;AACA,eAAA,KAAA,CAAA,QAAA,CAAA,CAAA,GAAA,KAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,GAAA,EAAA,GAAA,CAAA;AACA,eAAA,KAAA,CAAA,QAAA,CAAA,CAAA,GAAA,KAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA;AACA,eAAA,KAAA,CAAA,QAAA,CAAA,CAAA,GAAA,KAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,GAAA,EAAA,GAAA,CAAA;AACA;AACA;;AACA,WAAA,QAAA,CAAA,MAAA,CAAA,KAAA,KAAA,EAAA,KAAA,MAAA;AACA,KAxFA;AAyFA,IAAA,QAAA,EAAA,oBAAA;AAAA;;AACA,UAAA,SAAA,GAAA,QAAA,CAAA,aAAA,CAAA,YAAA,CAAA;AACA,UAAA,MAAA,GAAA,QAAA,CAAA,aAAA,CAAA,cAAA,CAAA;AAEA,MAAA,MAAA,CAAA,KAAA,GAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,gBAAA;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,MAAA,CAAA,WAAA,GAAA,MAAA,CAAA,gBAAA;AACA,MAAA,MAAA,CAAA,KAAA,CAAA,QAAA,GAAA,MAAA,CAAA,UAAA;AACA,MAAA,MAAA,CAAA,KAAA,CAAA,SAAA,GAAA,MAAA,CAAA,WAAA;AACA,WAAA,YAAA,GAAA,MAAA,CAAA,KAAA;AACA,WAAA,aAAA,GAAA,MAAA,CAAA,MAAA,CATA,CAWA;;AACA,WAAA,KAAA,GAAA,IAAA,KAAA,CAAA,KAAA,EAAA;AACA,WAAA,MAAA,GAAA,IAAA,KAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,WAAA,EAAA,GAAA,EAAA,KAAA,CAAA;AACA,WAAA,QAAA,GAAA,IAAA,KAAA,CAAA,aAAA,CAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA,CAAA;AAKA,WAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,UAAA,EAAA,MAAA,CAAA,WAAA;AACA,WAAA,QAAA,CAAA,aAAA,CAAA,MAAA,CAAA,gBAAA;AAEA,MAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,YAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,UAAA,EAAA,MAAA,CAAA,WAAA;;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,aAAA,CAAA,MAAA,CAAA,gBAAA;AACA,OAHA;AAKA,UAAA,OAAA,GAAA,IAAA,KAAA,CAAA,cAAA,EAAA;AACA,UAAA,aAAA,GAAA,IAAA,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA;AAEA,UAAA,cAAA,GAAA,aAAA,CAAA,IAAA,CAAA,sBAAA,CAAA;AACA,UAAA,eAAA,GAAA,IAAA,KAAA,CAAA,kBAAA,CAAA;AACA,QAAA,MAAA,EAAA;AADA,OAAA,CAAA;AAGA,UAAA,cAAA,GAAA,aAAA,CAAA,IAAA,CAAA,qBAAA,CAAA;AACA,UAAA,eAAA,GAAA,IAAA,KAAA,CAAA,kBAAA,CAAA;AACA,QAAA,MAAA,EAAA;AADA,OAAA,CAAA;AAGA,UAAA,YAAA,GAAA,aAAA,CAAA,IAAA,CAAA,oBAAA,CAAA;AACA,UAAA,aAAA,GAAA,IAAA,KAAA,CAAA,kBAAA,CAAA;AACA,QAAA,MAAA,EAAA;AADA,OAAA,CAAA;AAIA,UAAA,KAAA,GAAA,aAAA,CAAA,IAAA,CAAA,mBAAA,CAAA;AACA,UAAA,KAAA,GAAA,IAAA,KAAA,CAAA,kBAAA,CAAA;AACA,QAAA,MAAA,EAAA;AADA,OAAA,CAAA;AAGA,UAAA,MAAA,GAAA,aAAA,CAAA,IAAA,CAAA,oBAAA,CAAA;AACA,UAAA,MAAA,GAAA,IAAA,KAAA,CAAA,kBAAA,CAAA;AACA,QAAA,MAAA,EAAA;AADA,OAAA,CAAA;AAIA,WAAA,KAAA,GAAA,IAAA,KAAA,CAAA,sBAAA,CAAA,GAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,CAAA;AACA,WAAA,MAAA,GAAA,IAAA,KAAA,CAAA,sBAAA,CAAA,GAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,CAAA;AAEA,WAAA,IAAA,GAAA,KAAA,MAAA,CAAA,UAAA,CAAA,MAAA,GAAA,KAAA,QAAA,GAAA,CAAA;AACA,WAAA,KAAA,GAAA,GAAA;AAEA,WAAA,IAAA,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,KAAA,MAAA,EAAA,MAAA,CAAA;AACA,WAAA,MAAA,GAAA,IAAA,KAAA,CAAA,QAAA,EAAA;AACA,WAAA,MAAA,CAAA,GAAA,CAAA,KAAA,IAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,EAAA,KAAA,IAAA,GAAA,KAAA,KAAA,EAAA,GAAA;AACA,WAAA,MAAA,CAAA,KAAA,CAAA,CAAA,GAAA,KAAA,QAAA;AAEA,WAAA,GAAA,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,KAAA,KAAA,EAAA,KAAA,CAAA;AACA,WAAA,KAAA,GAAA,IAAA,KAAA,CAAA,QAAA,EAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,KAAA,GAAA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,QAAA;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,EAAA,IAAA,KAAA,IAAA,GAAA,KAAA,KAAA,CAAA,UAAA,CAAA,MAAA,IAAA,IAAA,KAAA,QAAA,IAAA,CAAA,GAAA,KAAA,KAAA,EAAA,GAAA;AAEA,UAAA,MAAA,GAAA,IAAA,UAAA,EAAA;AACA,MAAA,MAAA,CAAA,IAAA,CACA,qeAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,QAAA,GAAA,eAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,QAAA,GAAA,aAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,GAAA,KAAA,CAAA,UAAA;;AAEA,QAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA;;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,GAAA,EAAA,GAAA,EAAA,CAAA;;AAEA,QAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA;;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA;;AAEA,QAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA;;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,GAAA,CAAA,IAAA,EAAA,CAAA,GAAA,EAAA,IAAA,EAzBA,CA2BA;;;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,IAAA,KAAA,CAAA,KAAA,EAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA;;AAEA,QAAA,KAAA,CAAA,KAAA,GAAA,IAAA,KAAA,CAAA,KAAA,EAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,GAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA;;AAEA,QAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA;AACA,OA3CA;AA8CA,WAAA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AACA,WAAA,QAAA,CAAA,MAAA,CAAA,KAAA,KAAA,EAAA,KAAA,MAAA;AACA,MAAA,SAAA,CAAA,WAAA,CAAA,KAAA,QAAA,CAAA,UAAA;AACA,KAjNA;AAkNA,IAAA,MAAA,EAAA,gBAAA,KAAA,EAAA;AAAA;;AACA,WAAA,MAAA,GAAA,IAAA;AACA,WAAA,KAAA,GAAA,CAAA;AACA,UAAA,KAAA,GAAA,KAAA,CAAA,MAAA,CAAA,SAAA;;AACA,UAAA,KAAA,KAAA,WAAA,EAAA;AACA,aAAA,SAAA,GAAA,SAAA,KAAA,GAAA,UAAA;AACA,OAFA,MAEA,IAAA,KAAA,KAAA,KAAA,EAAA;AACA,aAAA,SAAA,GAAA,YAAA;AACA,OAFA,MAEA;AACA,aAAA,SAAA,GAAA,QAAA,KAAA,GAAA,UAAA;AACA;;AACA,WAAA,cAAA,CAAA,MAAA,GAAA,CAAA;AACA,WAAA,KAAA,CAAA,CAAA,EAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,gBAAA,KAAA;AACA,eAAA,KAAA;AACA,YAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA;;AACA;;AACA,eAAA,KAAA;AACA,gBAAA,IAAA,CAAA,OAAA,CAAA,KAAA,KAAA,EAAA;AACA,cAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA;;AACA,eAAA,OAAA;AACA,gBAAA,IAAA,CAAA,OAAA,CAAA,KAAA,OAAA,EAAA;AACA,cAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA;;AACA,eAAA,QAAA;AACA,gBAAA,IAAA,CAAA,OAAA,CAAA,KAAA,QAAA,EAAA;AACA,cAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA;;AACA,eAAA,SAAA;AACA,gBAAA,IAAA,CAAA,OAAA,CAAA,KAAA,SAAA,EAAA;AACA,cAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA;;AACA,eAAA,WAAA;AACA,gBAAA,IAAA,CAAA,OAAA,CAAA,KAAA,WAAA,EAAA;AACA,cAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA;;AACA,eAAA,SAAA;AACA,gBAAA,IAAA,CAAA,OAAA,CAAA,KAAA,SAAA,EAAA;AACA,cAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA;;AACA,eAAA,QAAA;AACA,gBAAA,IAAA,CAAA,OAAA,CAAA,KAAA,QAAA,EAAA;AACA,cAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA;;AACA,eAAA,UAAA;AACA,gBAAA,IAAA,CAAA,OAAA,CAAA,KAAA,UAAA,EAAA;AACA,cAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA;AA3CA;AA6CA,OA9CA;AA+CA,WAAA,MAAA,CAAA,KAAA,cAAA;AACA,KA9QA;AA+QA,IAAA,MAAA,EAAA,gBAAA,KAAA,EAAA;AAAA;;AACA,WAAA,UAAA,CAAA,MAAA,GAAA,CAAA;AACA,WAAA,WAAA,CAAA,MAAA,GAAA,CAAA;AACA,MAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,QAAA,CAAA,KAAA,MAAA,EAAA;AACA,UAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA,IAAA;AACA,SAFA,MAEA;AACA,UAAA,MAAA,CAAA,SAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA,QAAA,MAAA,CAAA,WAAA,CAAA,IAAA,CAAA,IAAA;AACA,OAPA;AAQA,WAAA,eAAA,GAAA,KAAA,UAAA,CAAA,MAAA,GAAA,KAAA,WAAA,CAAA,MAAA,GAAA,CAAA;AACA,KA3RA;AA4RA,IAAA,WAAA,EAAA,uBAAA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,aAAA,GAAA,QAAA,CAAA,aAAA,CAAA,iBAAA,CAAA;AACA,UAAA,YAAA,GAAA,QAAA,CAAA,aAAA,CAAA,gBAAA,CAAA;AACA,UAAA,UAAA,GAAA,QAAA,CAAA,aAAA,CAAA,aAAA,CAAA;AACA,UAAA,UAAA,GAAA,QAAA,CAAA,aAAA,CAAA,aAAA,CAAA;AACA,UAAA,UAAA,GAAA,QAAA,CAAA,aAAA,CAAA,oBAAA,CAAA;;AAEA,UAAA,IAAA,CAAA,UAAA,CAAA,MAAA,GAAA,IAAA,CAAA,WAAA,CAAA,MAAA,GAAA,IAAA,CAAA,UAAA,CAAA,MAAA,EAAA;AACA,QAAA,IAAA,CAAA,WAAA,GAAA,WAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,eAAA,GAAA,kBAAA;AACA,QAAA,UAAA,CAAA,KAAA,CAAA,KAAA,GAAA,SAAA;AACA,QAAA,UAAA,CAAA,KAAA,CAAA,KAAA,GAAA,SAAA;AACA,QAAA,aAAA,CAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,QAAA,YAAA,CAAA,KAAA,CAAA,OAAA,GAAA,GAAA;AACA,OAPA,MAOA,IAAA,IAAA,CAAA,UAAA,CAAA,MAAA,GAAA,IAAA,CAAA,WAAA,CAAA,MAAA,GAAA,IAAA,CAAA,UAAA,CAAA,MAAA,EAAA;AACA,QAAA,IAAA,CAAA,WAAA,GAAA,UAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,eAAA,GAAA,gBAAA;AACA,QAAA,UAAA,CAAA,KAAA,CAAA,KAAA,GAAA,SAAA;AACA,QAAA,UAAA,CAAA,KAAA,CAAA,KAAA,GAAA,SAAA;AACA,QAAA,YAAA,CAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,QAAA,aAAA,CAAA,KAAA,CAAA,OAAA,GAAA,GAAA;AACA;;AACA,MAAA,UAAA,CAAA,KAAA,CAAA,UAAA,GAAA,UAAA;AACA;AApTA,GA1BA;AAgVA,EAAA,OAhVA,qBAgVA;AAAA;;AACA,SAAA,IAAA,CAAA,YAAA;AACA,MAAA,MAAA,CAAA,QAAA;;AACA,MAAA,MAAA,CAAA,OAAA;AACA,KAHA;AAIA;AArVA,CAAA","sourcesContent":["<template>\n    <div class='container'>\n        <canvas class=\"main-canvas\"></canvas>\n        <div class=\"home__cta\">\n            <router-link class=\"home__cta-hot\" to=\"/hot\">See the movies\n              <span class=\"line\"></span>\n              <span class=\"circle\"></span>\n            </router-link>\n            <router-link class=\"home__cta-cold\" to=\"/cold\">See the movies\n              <span class=\"line\"></span>\n              <span class=\"circle\"></span>\n            </router-link>\n        </div>\n        <div class=\"home__container\">\n          <h2 class=\"home__text\">{{ text_first }}{{ text_last }}</h2>\n          <h2 class=\"home__temperature\">{{ temperature }}</h2>\n          <h4 class=\"home__sort\">Sort by</h4>\n          <ul id=\"list\"></ul>\n        </div>\n    </div>\n</template>\n\n<style lang=\"sass\">\n  body\n    background-color: rgba(26,26,26,1)\n    background-image: url(\"/textures/bg.png\")\n    background-position: center\n    background-size: cover\n    background-blend-mode: soft-light\n    transition: background 1s ease\n  .home\n    &__cta\n      &-hot, &-cold\n        position: absolute\n        text-decoration: none\n        text-transform: uppercase\n        font-family: 'Open Sans'\n        font-size: 12px\n        display: flex\n        align-items: center\n        opacity: 0\n        transition: opacity 1s ease\n        .line\n          width: 105px\n          height: 1px\n          margin-left: 5px\n          background-color: #DD3400\n        .circle\n          height: 30px\n          width: 30px\n          border-radius: 50%\n          color: transparent\n          border: 1px solid #DD3400\n          display: inline-block\n      &-hot\n        color: #DD3400\n        top: 40%\n        left: 4.2%\n        .line\n          background-color: #DD3400\n        .circle\n          border: 1px solid #DD3400\n      &-cold\n        color: #276DFF\n        top: 60%\n        left: 5%\n        .line\n          background-color: #276DFF\n        .circle\n          border: 1px solid #276DFF\n    &__container\n      position: absolute\n      left: 45%\n      top: 35%\n      h2\n        color: #888888\n        font-size: 40px\n        font-family: 'Mazius'\n        font-weight: lighter\n        transition: color 1s ease\n        margin: 10px\n        &:last-child\n          font-size: 55px\n          font-family: 'Mazius I'\n          color: white\n  h4\n    color: #888888\n    text-transform: uppercase\n    font-family: 'Open Sans'\n    padding-top: 130px\n    transition: color 1s ease\n  #list\n    display: flex\n    list-style: none\n    padding: 0\n    li\n      padding-right: 10px\n      text-transform: uppercase\n      color: white\n      font-family: 'Open Sans'\n      cursor: pointer\n      font-size: 15px\n</style>\n\n<script>\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three';\nimport Easing from \"../assets/js/easing.js\"\nimport Mouse from '../assets/js/mouse.js'\n\nexport default {\n  name: 'Scene',\n  data() {\n    return {\n      camera: null,\n      scene: null,\n      renderer: null,\n      mesh: null,\n      cold_nbr: 0,\n      cold_nbr_target : 0,\n      text_first: 'Global temperature of ',\n      text_last: 'a movie : ',\n      temperature: 'calculating...',\n      time: 0,\n      time2: 2,\n      films: null,\n      cold_films: [],\n      hot_films: [],\n      total_films: [],\n      filtered_films: [],\n      genres: [\n        ['all']\n      ],\n      change: false,\n    }\n  },\n  methods: {\n    init: function(callback) {\n      var requestURL = '/movies.json';\n      var request = new XMLHttpRequest();\n      request.open('GET', requestURL);\n\n      request.responseType = 'json';\n      request.send();\n\n      let that = this\n\n      request.onload = function() {\n        that.films = request.response;\n\n        that.films[0].forEach(film => {\n          if (!(that.genres.includes(film['genre']))) {\n            that.genres.push(film['genre'])\n          }\n        })\n\n        that.genres.forEach(genre => {\n          let li = document.createElement(\"LI\")\n          let t = document.createTextNode(genre)\n          li.appendChild(t)\n          li.addEventListener(\"click\", that.update)\n          document.getElementById(\"list\").appendChild(li)\n        })\n\n        that.films[0].forEach(film => {\n          if (film['colors'] === 'cold') {\n            that.cold_films.push(film)\n          } else {\n            that.hot_films.push(film)\n          }\n            that.total_films.push(film)\n          })\n\n        that.cold_nbr_target = (that.cold_films.length/that.total_films.length) * 4\n\n        callback()\n        that.update_text()\n      }\n    },\n    lerp: function (value1, value2, amount) {\n        amount = amount < 0 ? 0 : amount;\n        amount = amount > 1 ? 1 : amount;\n        return value1 + (value2 - value1) * amount;\n    },\n    animate: function() {\n        requestAnimationFrame(this.animate);\n        this.time += 0.01\n        this.time2 += 0.01\n\n        this.cold_nbr = this.lerp(this.cold_nbr, this.cold_nbr_target, 0.1)\n\n        this.g_py = (this.g_cold.parameters.height * this.cold_nbr/2)\n        this.o_cold.scale.y = this.cold_nbr\n        this.o_cold.position.set(-0.3, this.g_py - this.level, 0.1)\n        this.o_hot.scale.y = 4 - this.cold_nbr\n        this.o_hot.position.set(-0.3, 2 * this.g_py + this.g_hot.parameters.height * (4 - this.cold_nbr)/2 - this.level, 0.1)\n\n        if (this.change === true) {\n          this.update_text()\n          this.change = false\n        }\n\n        if (this.time2 < 2) {\n            if (this.temperature === 'very cold') {\n              this.pivot.rotation.y = this.lerp(this.pivot.rotation.y, 0, 0.1)\n              this.pivot.rotation.z = this.lerp(this.pivot.rotation.z, -0.1, 0.1)\n            } else if (this.temperature === 'very hot') {\n              this.pivot.rotation.y = this.lerp(this.pivot.rotation.y, Math.PI * 2, 0.1)\n              this.pivot.rotation.z = this.lerp(this.pivot.rotation.z, 0.1, 0.1)\n            }\n          }\n\n        if (this.time < 2) {\n          if (this.temperature === 'very cold') {\n            this.pivot.rotation.x = this.lerp(this.pivot.rotation.x, -0.1, 0.1)\n            this.pivot.rotation.y = this.lerp(this.pivot.rotation.y, 0, 0.1)\n            this.pivot.rotation.z = this.lerp(this.pivot.rotation.z, -0.1, 0.1)\n          } else if (this.temperature === 'very hot') {\n            this.pivot.rotation.x = this.lerp(this.pivot.rotation.x, 0.1, 0.1)\n            this.pivot.rotation.y = this.lerp(this.pivot.rotation.y, Math.PI * 2, 0.1)\n            this.pivot.rotation.z = this.lerp(this.pivot.rotation.z, 0.1, 0.1)\n          }\n        }\n        this.renderer.render(this.scene, this.camera);\n    },\n    create3d: function() {\n        const container = document.querySelector('.container')\n        const canvas = document.querySelector('.main-canvas')\n\n        canvas.width = window.innerWidth * window.devicePixelRatio\n        canvas.height = window.innerHeight * window.devicePixelRatio\n        canvas.style.maxWidth = window.innerWidth\n        canvas.style.maxHeight = window.innerHeight\n        this.canvas_width = canvas.width\n        this.canvas_height = canvas.height\n\n        // Setup Scene\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 20000);\n        this.renderer = new THREE.WebGLRenderer({\n            canvas: canvas,\n            alpha: true\n        });\n\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\n        this.renderer.setPixelRatio(window.devicePixelRatio)\n\n        window.addEventListener(\"resize\", () => {\n            this.renderer.setSize(window.innerWidth, window.innerHeight)\n            this.renderer.setPixelRatio(window.devicePixelRatio)\n        })\n\n        let manager = new THREE.LoadingManager();\n        let textureLoader = new THREE.TextureLoader(manager)\n\n        let texture_silver = textureLoader.load('/textures/silver.jpg')\n        let material_silver = new THREE.MeshMatcapMaterial({\n            matcap: texture_silver,\n        })\n        let texture_thermo = textureLoader.load('/textures/white.jpg')\n        let material_thermo = new THREE.MeshMatcapMaterial({\n            matcap: texture_thermo,\n        })\n        let texture_grad = textureLoader.load('/textures/grad.jpg')\n        let material_grad = new THREE.MeshMatcapMaterial({\n            matcap: texture_grad,\n        })\n\n        let t_hot = textureLoader.load('/textures/hot.jpg')\n        let m_hot = new THREE.MeshMatcapMaterial({\n            matcap: t_hot,\n        })\n        let t_cold = textureLoader.load('/textures/cold.jpg')\n        let m_cold = new THREE.MeshMatcapMaterial({\n            matcap: t_cold,\n        })\n\n        this.g_hot = new THREE.CylinderBufferGeometry(0.1, 0.1, 1, 100);\n        this.g_cold = new THREE.CylinderBufferGeometry(0.1, 0.1, 1, 100);\n\n        this.g_py = (this.g_cold.parameters.height * this.cold_nbr/2)\n        this.level = 2.2\n\n        this.cold = new THREE.Mesh(this.g_cold, m_cold)\n        this.o_cold = new THREE.Object3D()\n        this.o_cold.add(this.cold)\n        this.o_cold.position.set(-0.3, this.g_py - this.level, 0.1)\n        this.o_cold.scale.y = this.cold_nbr\n\n        this.hot = new THREE.Mesh(this.g_hot, m_hot)\n        this.o_hot = new THREE.Object3D()\n        this.o_hot.add(this.hot)\n        this.o_hot.scale.y = 4 - this.cold_nbr\n        this.o_hot.position.set(-0.3, 2 * this.g_py + this.g_hot.parameters.height * (4 - this.cold_nbr)/2 - this.level, 0.1)\n\n        const loader = new GLTFLoader();\n        loader.load(\n            '/thermo_sanstxt.glb',\n            (gltf) => {\n                // called when the resource is loaded\n                // console.log(gltf);\n\n                // pointing Mesh\n                gltf.scene.children[0].children[1].geometry.center()\n                gltf.scene.children[0].children[2].geometry.center()\n                gltf.scene.children[0].children[3].geometry.center()\n\n                this.anneau = gltf.scene.children[0].children[1]\n                this.thermo = gltf.scene.children[0].children[2]\n                this.text = gltf.scene.children[0].children[3]\n                // Overiding Material\n                this.anneau.material = material_silver\n                this.thermo.material = material_thermo\n                this.text.material = material_grad\n                this.text.material.side = THREE.DoubleSide\n\n                this.anneau.scale.set(0.013,0.013,0.013)\n                this.anneau.position.set(0.1, 2.8, 0)\n\n                this.thermo.scale.set(0.013,0.013,0.013)\n                this.thermo.position.set(0, 0, 0)\n\n                this.text.scale.set(0.012,0.012,0.012)\n                this.text.position.set(0.25, -0.2, 0.15)\n\n                // Add to scene\n                this.group = new THREE.Group();\n                this.group.add( this.anneau );\n                this.group.add( this.thermo );\n                this.group.add( this.text );\n                this.group.add( this.o_cold )\n                this.group.add( this.o_hot )\n\n                this.pivot = new THREE.Group();\n                this.pivot.add( this.group )\n                this.pivot.position.set(-4, 0.1, 1.5)\n                this.pivot.rotation.set(-0.1, 0.3, 0.1)\n\n                this.scene.add( this.pivot );\n            },\n        );\n\n        this.camera.position.set( 0, 0, 7 );\n        this.renderer.render(this.scene,this.camera)\n        container.appendChild(this.renderer.domElement);\n        },\n        update: function(event) {\n          this.change = true\n          this.time2 = 0\n          let inner = event.target.innerHTML\n          if (inner === 'adventure') {\n            this.text_last = ' an ' + inner + ' movie :'\n          } else if (inner === 'all') {\n            this.text_last = ' a movie :'\n          } else {\n            this.text_last = ' a ' + inner + ' movie :'\n          }\n          this.filtered_films.length = 0\n          this.films[0].forEach(film => {\n            switch (inner) {\n              case \"all\":\n                this.filtered_films.push(film)\n              break;\n              case \"war\":\n                if (film['genre'] === 'war') {\n                  this.filtered_films.push(film)\n                }\n              break;\n              case \"drama\":\n                if (film['genre'] === 'drama') {\n                  this.filtered_films.push(film)\n                }\n              break;\n              case \"sci-fi\":\n                if (film['genre'] === 'sci-fi') {\n                  this.filtered_films.push(film)\n                }\n              break;\n              case \"romance\":\n                if (film['genre'] === 'romance') {\n                  this.filtered_films.push(film)\n                }\n              break;\n              case \"adventure\":\n                if (film['genre'] === 'adventure') {\n                  this.filtered_films.push(film)\n                }\n              break;\n              case \"fantasy\":\n                if (film['genre'] === 'fantasy') {\n                  this.filtered_films.push(film)\n                }\n              break;\n              case \"biopic\":\n                if (film['genre'] === 'biopic') {\n                  this.filtered_films.push(film)\n                }\n              break;\n              case \"thriller\":\n                if (film['genre'] === 'thriller') {\n                  this.filtered_films.push(film)\n                }\n              break;\n            }\n          })\n          this.filter(this.filtered_films);\n        },\n        filter: function(array) {\n          this.cold_films.length = 0\n          this.total_films.length = 0\n          array.forEach(film => {\n          if (film['colors'] === 'cold') {\n            this.cold_films.push(film)\n          } else {\n            this.hot_films.push(film)\n          }\n            this.total_films.push(film)\n          })\n          this.cold_nbr_target = (this.cold_films.length/this.total_films.length) * 4\n        },\n        update_text: function() {\n          let that = this\n              let home__ctacold = document.querySelector('.home__cta-cold')\n              let home__ctahot = document.querySelector('.home__cta-hot')\n              let home__text = document.querySelector('.home__text')\n              let home__sort = document.querySelector('.home__sort')\n              let home__temp = document.querySelector('.home__temperature')\n\n              if (that.cold_films.length > that.total_films.length - that.cold_films.length) {\n                that.temperature = 'very cold'\n                document.body.style.backgroundColor = 'rgba(19,19,71,1)'\n                home__text.style.color = '#276DFF'\n                home__sort.style.color = '#276DFF'\n                home__ctacold.style.opacity = '100'\n                home__ctahot.style.opacity = '0'\n              } else if (that.cold_films.length < that.total_films.length - that.cold_films.length){\n                that.temperature = 'very hot'\n                document.body.style.backgroundColor = 'rgba(47,0,0,1)'\n                home__text.style.color = '#DD3400'\n                home__sort.style.color = '#DD3400'\n                home__ctahot.style.opacity = '100'\n                home__ctacold.style.opacity = '0'\n              }\n              home__temp.style.fontFamily = \"'Mazius'\"\n        }\n    },\n  mounted() {\n    this.init(() => {\n        this.create3d()\n        this.animate()\n    })\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}