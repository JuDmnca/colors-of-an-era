{"remainingRequest":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/babel-loader/lib/index.js!/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/src/components/Scene.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/src/components/Scene.vue","mtime":1603437393260},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/cache-loader/dist/cjs.js","mtime":1603113174759},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/babel-loader/lib/index.js","mtime":1603113174629},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/cache-loader/dist/cjs.js","mtime":1603113174759},{"path":"/Users/juliedemendonca/Documents/_gobelins/colors-of-an-era/colors-of-an-era/node_modules/vue-loader/lib/index.js","mtime":1603113182020}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Scene.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class='container'>\n        <canvas class=\"main-canvas\"></canvas>\n        <div class=\"home__cta\">\n            <router-link class=\"home__cta-hot\" to=\"/hot\">See the movies\n              <span class=\"line\"></span>\n              <span class=\"circle\"></span>\n            </router-link>\n            <router-link class=\"home__cta-cold\" to=\"/cold\">See the movies\n              <span class=\"line\"></span>\n              <span class=\"circle\"></span>\n            </router-link>\n        </div>\n        <div class=\"home__container\">\n          <h2 class=\"home__text\">{{ text_first }}{{ text_last }}</h2>\n          <h2 class=\"home__temperature\">{{ temperature }}</h2>\n          <ul id=\"list\"></ul>\n        </div>\n    </div>\n</template>\n\n<style lang=\"sass\">\n  body\n    background-color: rgba(26,26,26,1)\n    background-image: url(\"/textures/bg.png\")\n    background-position: center\n    background-size: cover\n    background-blend-mode: soft-light\n    transition: background 1s ease\n  .home\n    &__cta\n      &-hot, &-cold\n        position: absolute\n        text-decoration: none\n        text-transform: uppercase\n        font-family: 'Open Sans'\n        font-size: 12px\n        display: flex\n        align-items: center\n        opacity: 0\n        transition: opacity 3s ease\n        .line\n          width: 105px\n          height: 1px\n          margin-left: 5px\n          background-color: #DD3400\n        .circle\n          height: 30px\n          width: 30px\n          border-radius: 50%\n          color: transparent\n          border: 1px solid #DD3400\n          display: inline-block\n      &-hot\n        color: #DD3400\n        top: 40%\n        left: 5%\n        .line\n          background-color: #DD3400\n        .circle\n          border: 1px solid #DD3400\n      &-cold\n        color: #276DFF\n        top: 60%\n        left: 5%\n        .line\n          background-color: #276DFF\n        .circle\n          border: 1px solid #276DFF\n    &__container\n      position: absolute\n      left: 45%\n      top: 35%\n      h2\n        color: #888888\n        font-size: 40px\n        font-family: 'Mazius'\n        font-weight: lighter\n        transition: color 1s ease\n        margin: 10px\n        &:last-child\n          font-size: 55px\n          font-family: 'Mazius I'\n          color: white\n</style>\n\n<script>\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport * as THREE from 'three';\nimport Easing from \"../assets/js/easing.js\"\nimport Mouse from '../assets/js/mouse.js'\n\nexport default {\n  name: 'Scene',\n  data() {\n    return {\n      camera: null,\n      scene: null,\n      renderer: null,\n      mesh: null,\n      cold_nbr: 0,\n      text_first: 'Global temperature of a ',\n      text_last: 'movie : ',\n      temperature: 'calculating...',\n      time: 0,\n      films: null,\n      cold_films: [],\n      hot_films: [],\n      total_films: [],\n      filtered_films: [],\n      genres: []\n    }\n  },\n  methods: {\n    init: function(callback) {\n      var requestURL = '/movies.json';\n      var request = new XMLHttpRequest();\n      request.open('GET', requestURL);\n\n      request.responseType = 'json';\n      request.send();\n\n      let that = this\n\n      request.onload = function() {\n        this.films = request.response;\n\n        this.films[0].forEach(film => {\n          if (!(that.genres.includes(film['genre']))) {\n            that.genres.push(film['genre'])\n          }\n        })\n\n        that.genres.forEach(genre => {\n          let li = document.createElement(\"LI\")\n          let t = document.createTextNode(genre)\n          li.appendChild(t)\n          li.addEventListener(\"click\", that.update)\n          document.getElementById(\"list\").appendChild(li)\n        })\n\n        this.films[0].forEach(film => {\n          if (film['colors'] === 'cold') {\n            that.cold_films.push(film)\n          } else {\n            that.hot_films.push(film)\n          }\n            that.total_films.push(film)\n          })\n\n        that.cold_nbr = (that.cold_films.length/that.total_films.length) * 4\n\n        callback()\n        setTimeout(() => {\n        let home__ctacold = document.querySelector('.home__cta-cold')\n        let home__ctahot = document.querySelector('.home__cta-hot')\n        let home__text = document.querySelector('.home__text')\n        let home__temp = document.querySelector('.home__temperature')\n\n        if (that.cold_films.length > that.total_films.length - that.cold_films.length) {\n          that.temperature = 'very cold'\n          document.body.style.backgroundColor = 'rgba(19,19,71,1)'\n          home__text.style.color = '#276DFF'\n          home__ctacold.style.opacity = '100'\n          home__ctahot.style.display = 'none'\n        } else if (that.cold_films.length < that.total_films.length - that.cold_films.length){\n          that.temperature = 'very hot'\n          document.body.style.backgroundColor = 'rgba(47,0,0,1)'\n          home__text.style.color = '#DD3400'\n          home__ctahot.style.opacity = '100'\n          home__ctacold.style.display = 'none'\n        } else {\n          that.temperature = 'temperate'\n        }\n\n        home__temp.style.fontFamily = \"'Mazius'\"\n        }, 2000);\n      }\n    },\n    animate: function() {\n        requestAnimationFrame(this.animate);\n        this.time += 0.01\n\n        if (this.time < 2) {\n          if (this.temperature === 'very cold') {\n            this.pivot.rotation.x -= 0.002 * Easing.easeInOutCubic(this.time % 1)\n            this.pivot.rotation.y -= 0.13 * Easing.easeInOutCubic(this.time % 1)\n            this.pivot.rotation.z -= 0.002 * Easing.easeInOutCubic(this.time % 1)\n          } else if (this.temperature === 'very hot') {\n            this.pivot.rotation.x += 0.003 * Easing.easeInOutCubic(this.time % 1)\n            this.pivot.rotation.y += 0.125 * Easing.easeInOutCubic(this.time % 1)\n            this.pivot.rotation.z += 0.002 * Easing.easeInOutCubic(this.time % 1)\n          }\n        }\n        this.renderer.render(this.scene, this.camera);\n    },\n    create3d: function() {\n        const container = document.querySelector('.container')\n        const canvas = document.querySelector('.main-canvas')\n\n        canvas.width = window.innerWidth * window.devicePixelRatio\n        canvas.height = window.innerHeight * window.devicePixelRatio\n        canvas.style.maxWidth = window.innerWidth\n        canvas.style.maxHeight = window.innerHeight\n        this.canvas_width = canvas.width\n        this.canvas_height = canvas.height\n\n        // Setup Scene\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 20000);\n        this.renderer = new THREE.WebGLRenderer({\n            canvas: canvas,\n            alpha: true\n        });\n\n        this.renderer.setSize(window.innerWidth, window.innerHeight)\n        this.renderer.setPixelRatio(window.devicePixelRatio)\n\n        window.addEventListener(\"resize\", () => {\n            this.renderer.setSize(window.innerWidth, window.innerHeight)\n            this.renderer.setPixelRatio(window.devicePixelRatio)\n        })\n\n        let manager = new THREE.LoadingManager();\n        let textureLoader = new THREE.TextureLoader(manager)\n\n        let texture_silver = textureLoader.load('/textures/silver.jpg')\n        let material_silver = new THREE.MeshMatcapMaterial({\n            matcap: texture_silver,\n        })\n        let texture_thermo = textureLoader.load('/textures/white.jpg')\n        let material_thermo = new THREE.MeshMatcapMaterial({\n            matcap: texture_thermo,\n        })\n        let texture_grad = textureLoader.load('/textures/grad.jpg')\n        let material_grad = new THREE.MeshMatcapMaterial({\n            matcap: texture_grad,\n        })\n\n        let t_hot = textureLoader.load('/textures/hot.jpg')\n        let m_hot = new THREE.MeshMatcapMaterial({\n            matcap: t_hot,\n        })\n        let t_cold = textureLoader.load('/textures/cold.jpg')\n        let m_cold = new THREE.MeshMatcapMaterial({\n            matcap: t_cold,\n        })\n\n        let g_hot = new THREE.CylinderBufferGeometry(0.1, 0.1, (4 - this.cold_nbr), 100);\n        let g_cold = new THREE.CylinderBufferGeometry(0.1, 0.1, this.cold_nbr, 100);\n\n        let g_py = (g_cold.parameters.height/2)\n        let level = 2.2\n\n        this.cold = new THREE.Mesh(g_cold, m_cold)\n        this.cold.position.set(-0.3, g_py - level, 0.1)\n        this.hot = new THREE.Mesh(g_hot, m_hot)\n        this.hot.position.set(-0.3, 2 * g_py + g_hot.parameters.height/2 - level, 0.1)\n\n        const loader = new GLTFLoader();\n        loader.load(\n            '/thermo_sanstxt.glb',\n            (gltf) => {\n                // called when the resource is loaded\n                console.log(gltf);\n\n                // pointing Mesh\n                gltf.scene.children[0].children[1].geometry.center()\n                gltf.scene.children[0].children[2].geometry.center()\n                gltf.scene.children[0].children[3].geometry.center()\n\n                this.anneau = gltf.scene.children[0].children[1]\n                this.thermo = gltf.scene.children[0].children[2]\n                this.text = gltf.scene.children[0].children[3]\n                // Overiding Material\n                this.anneau.material = material_silver\n                this.thermo.material = material_thermo\n                this.text.material = material_grad\n                this.text.material.side = THREE.DoubleSide\n\n                this.anneau.scale.set(0.013,0.013,0.013)\n                this.anneau.position.set(0.1, 2.8, 0)\n\n                this.thermo.scale.set(0.013,0.013,0.013)\n                this.thermo.position.set(0, 0, 0)\n\n                this.text.scale.set(0.012,0.012,0.012)\n                this.text.position.set(0.25, -0.2, 0.15)\n\n                // Add to scene\n                this.group = new THREE.Group();\n                this.group.add( this.anneau );\n                this.group.add( this.thermo );\n                this.group.add( this.text );\n                this.group.add( this.cold )\n                this.group.add( this.hot )\n\n                this.pivot = new THREE.Group();\n                this.pivot.add( this.group )\n                this.pivot.position.set(-4, 0.1, 1.5)\n                this.pivot.rotation.set(-0.1, 0.3, 0.1)\n\n                this.scene.add( this.pivot );\n            },\n        );\n\n        this.camera.position.set( 0, 0, 7 );\n        this.renderer.render(this.scene,this.camera)\n        container.appendChild(this.renderer.domElement);\n        },\n        update: function(event) {\n          let inner = event.target.innerHTML\n          console.log(this.filtered_films);\n          this.filtered_films = []\n          console.log(this.films);\n          this.films[0].forEach(film => {\n            switch (inner) {\n              case \"war\":\n                this.filtered_films.push(film)\n              break;\n              case \"drama\":\n                this.filtered_films.push(film)\n              break;\n              case \"sci-fi\":\n                this.filtered_films.push(film)\n              break;\n              case \"romance\":\n                this.filtered_films.push(film)\n              break;\n              case \"adventure\":\n                this.filtered_films.push(film)\n              break;\n              case \"fantasy\":\n                this.filtered_films.push(film)\n              break;\n              case \"biopic\":\n                this.filtered_films.push(film)\n              break;\n              case \"thriller\":\n                this.filtered_films.push(film)\n              break;\n            }\n          });\n        },\n        filter: function(array) {\n          array.forEach(film => {\n          if (film['colors'] === 'cold') {\n            this.cold_films.push(film)\n          } else {\n            this.hot_films.push(film)\n          }\n            this.total_films.push(film)\n          })\n          that.cold_nbr = (this.cold_films.length/this.total_films.length) * 4\n        }\n    },\n  mounted() {\n    this.init(() => {\n        this.create3d()\n        this.animate()\n    })\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}